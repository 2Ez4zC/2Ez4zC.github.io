<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[2Ez4zC]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://2ez4zc.github.io/2Ez4zC/</link><image><url>https://2ez4zc.github.io/2Ez4zC/lib/media/favicon.png</url><title>2Ez4zC</title><link>https://2ez4zc.github.io/2Ez4zC/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Thu, 16 Oct 2025 10:29:25 GMT</lastBuildDate><atom:link href="https://2ez4zc.github.io/2Ez4zC/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Thu, 16 Oct 2025 10:29:23 GMT</pubDate><copyright><![CDATA[2Ez4zC]]></copyright><ttl>60</ttl><dc:creator>2Ez4zC</dc:creator><item><title><![CDATA[2 指南]]></title><description><![CDATA[ 
 <br>000]]></description><link>https://2ez4zc.github.io/2Ez4zC/0-序/2-指南.html</link><guid isPermaLink="false">0 序/2 指南.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 05:38:28 GMT</pubDate></item><item><title><![CDATA[1 序言]]></title><description><![CDATA[ 
 <br>就像罗贝托·波拉尼奥在《2666》中所表达的一样。世界不会变得更好了。<br>
有一天，我也终于意识到，我不会变的更好了。<br>所以想把之前有价值的东西记录一下，形成不了完整的作品。<br>
但至少尽量完整记录一下自己想要实现的框架。<br>之后无论是放弃，还是选择其他更轻松的方式，都会更从容些吧。<br>审稿专家们说我写的是散文，但我自己清楚，如果不写散文，写出来的东西就会是教程。<br>我是写不来那种引经据典，带数据的论文的。<br>
还好在这里我想写什么就写什么。<br>
干货，牢骚，管他呢。]]></description><link>https://2ez4zc.github.io/2Ez4zC/0-序/1-序言.html</link><guid isPermaLink="false">0 序/1 序言.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 06:53:56 GMT</pubDate></item><item><title><![CDATA[0.2 数字景观导读]]></title><description><![CDATA[ 
 <br>在构建愿景的同时，也要明确“选择信息化”这一决策的必要性，明确自己的需求，反思现在的问题和限制。不一定形成一条清晰的道路，但至少明确一下方向，愿景的实现需要解决哪些问题。这一部分没什么干货，不能立刻帮你解决现实问题。可根据自己的情况和需求灵活选择：<br>
<br>初学者
<br>如果是刚开始了解信息技术，学软件不知从哪儿入手，很迷茫，没动力。建议看一看，帮助大家形成合理的预期，给一些可能遇到的不符合预期的事情打好预防针，避免热情消退后的落差，帮助大家明确学习信息技术的目的。<br>
<br>对信息化技术有一定了解和思考的群体
<br>如果对这一领域有所了解，短期目标、需求很明确。可以略读，或者直接去看机制或实务篇。但当对于技术的学习、推广，或者对环境感到迷茫的时候。再回来看看，或许能找到更多共鸣。如果已经是处于瓶颈、动力不足的迷茫期，可以稍微仔细看一看。<br>
<br>对信息化领域有一定深入钻研的群体
<br>你可能在不止一个方面比笔者的研究还要深，或者已经是行业内有一定成就和地位的设计师或管理者。但如果你同样关注发展和普及，建议看一看，笔者希望本篇的阅读可以作为我们之间的交流。其实本篇有很多主管观点，和缺乏论证的东西，但这背后其实是笔者也正在面临的、且没能解决的问题。希望能够得您的指导，希望能和更多人交流。<br>
<br>开发者
<br>可以了解设计师的需求<br>意义<br>有利于标准化工作流构建<br>为多专业交互打好基础<br>不必受制于现有其他专业的经验<br>
<br>初学者
<br>可以看一看第四章和第五章，第六章第七章可以暂缓<br>
<br>对信息化技术有一定了解和思考的群体
<br>建议都看看，可以在单个方法或操作之上的更高层次，帮助精进提升，<br>
<br>对信息化领域有所钻研
<br>第四、第五章有一些主观观点，希望交流和批评指正<br>第六第七章其实比较专，如果和您领域类似，希望以交流的形式，批评指正<br>如果领域不完全重合，可以看看能不能对接上，即形成集成应用体系的更细化层次的具体实施<br>
<br>开发者
<br>自主开发与技术积累？供程序员参考<br>可指导软件开发？]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/0-数字景观：序言与导读/0.2-数字景观导读.html</link><guid isPermaLink="false">第1部分 数字景观/0 数字景观：序言与导读/0.2 数字景观导读.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:29:07 GMT</pubDate></item><item><title><![CDATA[<strong>回顾</strong>]]></title><description><![CDATA[ 
 <br><br>刚开始做参数化设计，有很多落地工程。<br>接触雄安BIM平台，感受到壁垒。<br>然后接触LIM，然后思想出现变化。<br>在建模时，无法专注于当前的模型，而是去想这个方法能不能用在以后的模型中，反复优化，耽误了进度。在做项目时，总想着能系统性地应用一些新技术，实现从工具到想法的创新。但受限于应用环境，总是要不停地向下兼容，创新理论在实践中的应用十不存一（具体体现举例）。即使突破了一个层次，总会有更高层次的限制（具体体现举例）。<br>然后开始脱节，失去实践机会。<br>然后迷茫反思。<br>虽然出于兴趣选择了这个专业，但在行业分工的背景下，笔者个人的设计创意能力并不能发挥相对比较优势，总有人能画出更好的方案。所以更加专注作为工具的信息技术创新研究。但理想和现实的落差成为了我的枷锁。<br><br><br><br>
<br>当下工具方法体系是弹性闭环的，效率是饱和的 必要性低
  （炒菜的比方？），可替代性，等效性，<br>

<br>新技术的应用都是锦上添花、或者缝缝补补 难以推进系统性应用， 激励度不足（一个是学习成本的问题，一个是无法发挥全面价值的问题） 盲目推进可能会徒增问题
  需求不集中，需求导向仍需明确。
  专项支援数量少：原因在于需求导向不清晰，单项工作不像水电结构一样有明确的生态位，系统性应用难度大但必要性低。这些短期来讲是客观事实；
  成效不够理想：原因在于参与形式，均为单项参与、锦上添花的，也有费力不讨好的；参与度低，难以与项目主体工作有机结合、系统性地解决深层问题；<br>

<br>要改变的太多，难以自上而下地直接全面改变。自下而上地，我尝试了，我脱节，团队尝试了，可能团队会脱节。总要有所取舍，
  系统性的方法推不动，需要改变的东西太多，强行推进会造成个人甚至团队的脱节。
  还是需要整体环境的改变。<br>

<br>大家都比较务实，比较功利（不是贬义的意思）
  总体反响较弱：以上支援工作，未被在所总结中以任何形式，被自己项目组或任何其他项目组提及或总结。
  工具在语境体系中的边缘性和次要性
  现实意义是什么
  技术孤岛的问题，单项地一两个用上了，也不需要我去普及教学。各组都有相应技能的人员，大部分有需求的应用点也不用我去参与。只是这些应用点仍然处于瓶颈之下，也是那种锦上添花的形式<br>

<br>但也总要有人去做费力不讨好的部分，踏实地做，较真地做，不是包装出成果去做宣传那么简单
  现在的环境，处于对项目进展的考虑，处于价值认知的偏差，或者是满足于当前的单项应用，给不了更大的空间
  所以我只能退居二线，先梳理一下
  但这并不代表我不重视实践，<br>

<br><br><br>做项目再也无法静下心来，所以笔者暂时离开了项目一线，去做“研究”，以帮忙的形式，在项目中寻求单项的应用点，但仍然不理想（具体体现举例，帮教带的困难）。<br>脑海中的技术体系越完整，自己越清楚这些技术在当前环境中是无法应用的。所以把这些想法梳理、记录下来。早晚有一天会有用<br><br><br>愿景篇的反思<br>机制篇的积累<br>实务篇的分享<br>本身水平有限，主要靠堆量<br>肯定有不够专业的地方，但因为深度不深，所以也不会造成太大误导<br>欢迎批评指正<br>]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/0-数字景观：序言与导读/0.1-数字景观序言.html</link><guid isPermaLink="false">第1部分 数字景观/0 数字景观：序言与导读/0.1 数字景观序言.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:27:51 GMT</pubDate></item><item><title><![CDATA[1.3 信息化设计的愿景]]></title><description><![CDATA[ 
 <br>本篇主要讨论三个问题：<br>信息化设计好在哪儿（必要性）<br>我们需要信息化设计么？（需求导向）<br>信息化设计的愿景（愿景）<br><br><br>“某央企设计院领导：全员学BIM，不然就滚蛋”<br>“某事务所：Rhino是最基本的软件能力”<br>“00后再设计院一开始全面使用AI绘图”<br>大哥你学软件，你学他有啥用啊？<br>瞥一眼铺天盖地的教程、培训班广告，信息技术似乎无限美好。但回头一想，好像也没那么好。所以我们就先谈谈信息技术的必要性，明确学习技术的原动力。主要是和“传统技术”进行二元比较，看一看：<br>信息技术有哪些明显的优势，是否是必要的<br>有哪些劣势，或者未能体现的优势，问题出在哪儿？<br>能解决什么问题，会出现哪些新的问题<br>我就是不想学信息技术，行不行？<br><br><br><br>从设计创意出发<br><br>常规审美，特异化审美，参数化风格。在参数化设计出现初期，这种技术方法和风格还具有一定的绑定方式，即通过这种方法可以设计出一种特定风格的东西。但当参数化设计风格不再新鲜之时，这种技术的意义也就局限于，在实现这种风格时能有更高的效率，而非审美层面的创新了。<br>炫酷与自由：数字化风格”的项目之所以建成了是因为内在和外在统一了，有需求，有说法。数字技术并不足够起到决定性作用，所以不用担心技术对多元化的影响。但对于每一个项目都要警惕炫酷的应用需求与消费主义的陷阱。<br><br>
<br>随机设计
<br>生成式设计对未知领域的探索、AI设计<br>
<br>仿生景观
<br>现实审美的演变<br>
<br>沉浸体验
<br>VR、AR、MR、元宇宙<br><br>审美的需求是没有上下和下限的<br>个人审美，大众审美<br>从下限来讲，有一块场地，大家就能用<br>从上限来讲，有主导话语权的人让你改一百次也是改（就这一条就足够把效率的事情等效消纳掉）<br>审美需求的升级<br><br><br><br><br>GIS，地理设计切入<br>评估分析起作用的时候，正面<br>软科学到硬科学<br>核心竞争力<br>科学性，和前沿发展趋势的衔接<br><br>
<br>跨尺度传导问题
<br>规划领域、地理设计领域的定量逻辑<br>宏观到微观<br>向工程建造尺度的传达问题<br>同样的分析结果，放到不同尺度下，是否还具有指导意义<br>是否还能形成有意义的结论<br>是否能够闭环<br>
<br>分析结果向决策的传导问题
<br>“定性”和“定量“的边界<br>正如本书感性和理性的分工<br><br>
<br>数量级问题
<br>碳汇计算的小头<br>工程造价的小头<br>大工作量解决不了大问题<br>
<br>开放性问题
<br>开放复杂系统，没有绝对的定量<br>
<br>无法量化的问题
<br>审美是无法量化的<br><br><br><br><br>都说懒惰是推动科学发展的原动力<br>我们学习信息化技术，肯定是想要提高效率，优化体验，减少枯燥，解放双手和大脑，体现为以下几个方面<br>降低人工成本，解放思路去关注方案推敲，拓宽设计的可能性。<br>
<br>创建的效率和精确性
<br><a data-tooltip-position="top" aria-label="notion://www.notion.so/f77655f8d4df4a5381a6e24cd9780d20#_%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/f77655f8d4df4a5381a6e24cd9780d20#_人机交互" target="_blank">人机交互</a><br>
<br>传达的效率和精确性
<br><a data-tooltip-position="top" aria-label="notion://www.notion.so/f77655f8d4df4a5381a6e24cd9780d20#_%E5%8D%8F%E5%90%8C%E4%BA%A4%E4%BB%98" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/f77655f8d4df4a5381a6e24cd9780d20#_协同交付" target="_blank">协同交付</a><br><br>容差<br>
<br>度量单位的容差
<br>园林工程不是造精密仪器，也不是造飞机大炮、修大桥<br>顶多是不好看，很少会要人命<br>有时候模数取整纯粹是为了满足个人强迫症<br>也并不存在绝对的弧线或者nurbs曲线<br>吐槽一下线形标注的事儿<br>
<br>工作组织的容差
<br>很多效率上的事情，被工作组织问题给盖过去了<br>工作流、信息流，一旦断开，就比不过靠口头沟通、去解决人的问题的传统工作方法<br><br>向下兼容的问题<br>图纸效力的问题<br>应用环境，团队的问题<br><br><br><br>信息技术和传统方法的等效性<br>实际情况下，现实压力下<br>信息技术并未体现出非常高的必要性<br>有太多的平替<br>所以会叫好不叫座<br>新技术的必要性<br>传统技术对于新技术<br>是否属于劣币驱逐良币<br><br><br>如何实现愿景？<br>为什么要学？<br>为什么要推广？<br>为什么要改变？<br>为什么叫好不叫座？<br>推动力<br>新的领域没需求？<br>传统领域有平替？<br>在发现学软件、学编程并不能解决问题的时候<br>把目光转向了通识领域的规律，经济学、产品经理……<br>有没有可能用数学模型、经济学的思维，对学习成本、学习意愿、学习收益、以及技术壁垒、语境进行分析？ 生产关系，生产力<br><br><br><br>2.1主要是针对三个层次，分析整体到局部不同层次的需求，预期<br>各层次之间互相作为内因和外因的关系？（设计院在行业视角下怎么选择，设计师个体该怎么选择）<br>正向：需求导向，推动因素<br>反向：阻碍的内因和外因<br>2.2~2.4结合信息技术的分析：（审美，科学，高效精确）✖三个层次<br>内容分配还需推敲，是总分的关系，还是正、反并列分配的关系<br><br>个人和环境的割裂问题<br>自私的问题，分内分外的问题，信息差的问题<br>从业者个体角度，教育领域的供给优化，规划建设从业者整体素质的提升，但个人选择还是收到行业格局影响，现在这种形式看来并不能作为主导途径<br><br>项目组织习惯的问题<br>笔者目前关注中观层次的普及问题，已经碰的头破血流<br>管理层面上的分工优化，充分发挥设计大师（审美）、技术大神（效率）、科研力量（科学性）的相对比较优势，各司其职，不要各个梯队都搞扁平化的全才去一把抓<br><br>技术突破带来更大层面的社会变革，比如某个行业或法律上解决了AI的置信度和权责问题，行业只能被动承受（类比工业革命）<br>这都不是一种技术、一本标准、几家单位能解决的事情<br>近期来讲，只能是抛砖引玉，引发思考。远期还需要很多学术方面、政策方面的东西。大家共同参与。<br><br><br><br>个人角度<br><br>设计风格的问题<br>你有没有发挥个人审美的空间<br>信息技术去驱动审美本身就是有争议的<br>而且是触及行业核心，或者触及某些群体的话语权的<br><br>能给自己一个解释<br>但对整个项目的运转可能没什么作用<br>最后还是会编程画分析图做包装<br>然后看甲方领导的意见来<br><br>考虑信息差的问题，除了所有人都不知道你会用这个技术<br>你用十分之一的事件做完之后，就下班了？还是花时间去做其他事情？<br><br>个人层面最大的问题，就是你不是一个独立的设计大师<br>而是被置于一个宏观环境下的打工人<br>激励机制的问题，选择传统方法总是高于学习新方法？新方法投产比太低？长期不够长，而且总有重置机制，所以总会无志人常立志<br>个人不能去承担团队或行业的改变成本<br><br><br><br>假设你是一个团队的管理者<br>来决策是否要在团队内普及信息化技术<br>从团队到单位，项目组，业务所室，设计院，事务所？<br><br>个人层面的问题同样存在<br>但团队的风格比个人的风格更立得住<br>有一些信息化技术可以有助于形成品控，形成统一的风格<br>但审美总是掌握在少数人的手里<br>全员普及信息化，对于审美的帮助不大<br><br>个人层面的问题同样存在<br>如果只是一个人会，那么不好融入工作流<br>如果都普及了，成本问题，投产比问题<br>但区别在于如果团队内达成一致，话语权能大一些<br>但还是改变不了宏观的问题<br><br>几种决策<br>一种是精简人才，少数人用高技术干大事儿<br>第二种是维持平衡<br>第三种是劣币驱逐良币<br>光脚的不怕穿鞋的<br>存在生产关系限制生产力的情况，所以很多技术想法没法直接用很正常<br><br>只要保证整个大环境、烂摊子只他妈的适应传统方法<br>所有信息技术都要向下兼容<br>那就没个好<br>大家一起不学不练<br>一起加班<br>卷卷卷<br>即使不学新技术<br>不去迎合新技术的要求<br>也不影响项目的运作<br><br><br><br>从单位到行业<br><br><br>数据权力？(《置身事内》中提到的复杂信息）<br>政府对数据权力的诉求<br>数据资产数据效率<br><br>科学发展的核心动力。<br>但从市场供需关系的角度来讲，效率提升在近期并不能解决任何问题。微观来讲，掌握一门新技术也没法让你在实际项目中无往不利。<br>提升效率到底有没有用？<br>从“图纸打补丁”到photoshop，再到参数化设计+ai渲染<br>有价值才能推进普及，提到新技术，最直观的价值往往是效率。<br>
<br>效率与市场供需
<br>信息模型技术很大的价值就是效率（容错，修改成本，沟通成本都属于效率范畴）<br>但在上述分析的背景下，全行业各环节一起提升效率的激励程度不高，所以不好推广<br>但长远角度，蛋糕变大了，效率的提升才有意义<br>造成困境的经济学原理？<br>要解释为什么即使能够简单地提升效率，行业也不会改变的问题<br>经济学原理中，农业技术的发展不一定给农民带来好处。除非从社会行业结构的角度，把从业者的转行和社会整体从业结构优化考虑进去。也就是说，单一影响因素下，技术的发展会造成从业者规模的减少。很好理解，大家常说的“AI”把你取代的玩笑就是这个道理。如果一个没受过专业教育的人就能用高度产品化的软件去完成整套方案，那设计师的性价比就显得很低了。<br>仅从技术提升效率的角度来看，成本的降低会造成总收入的下降，长期来讲就是行业规模缩减，技术把人替代<br>
<br>设计成果过剩
<br>过剩：直觉上讲，很多人觉得计费标准是在控制价格上涨，但在“技术使成本降低”的语境下，计费标准造成的结果是“设计成果过剩”，最终就是没有十个项目给你做，但是可以让你把一个项目折腾十遍。<br>计费标准限制的保护性措施，加上技术革新，最后只会导致设计产品过剩。谁能想到，20年前的计费标准，其实是为了保护20年后的你不被AI淘汰。<br>除了技术发展之外，还要考虑整体的行业下行。<br>计费标准在这里其实是作为保护性措施，是防止前一种情况出现的减速带。但效率提升和计费限制会带来设计成果的过剩，简单来说就是即使你效率提升十倍，也不会有十个项目来给你做，只能让你把一个项目改十遍<br>
<br>设计费
<br>应对行业下行，提升设计效率，降低设计价格，似乎会是保持项目数量的一种途径（但这时整体的蛋糕仍然在变小。<br>当然市场规模，或者说项目多少还受到很多外部因素影响，集中体现为需求下降<br>而且还可能有更加强制的外部因素来限制项目的数量<br>所以说技术发展，效率提升，也解决不了宏观问题<br>但很多外部强制因素导致即使设计的价格降低了，业主的消费数量，也就是项目数量也不会增加，而且多出来的购买力并不会流入设计师的口袋<br>效率提高是可以降低成本，但社会信息都是公开透明的，竞争也是存在的，这个平衡点谁都清楚<br>会让你通过设计费打折的方式吐出来<br>大家用更低的价格做着更少的项目<br>此外还要考虑成本的模糊性，也就是前面讨论的新技术对效率影响的间接性，以及人们超乎想象的内卷和吃苦耐劳精神<br>但实际上越卷越没用！！！<br>房地产和市政工程都是收到政策影响较大的行业，政策导向对项目数量有强制影响。当政策对项目数量限制时，意愿大于数量限制，单位购买力高于对应数量下的成本，但高出来的这部分也并不会给设计师（打折之类形式？），会按照平衡点的预期价格，做着更少量的项目。<br>业主省下来的前被协调到其他公共领域。<br>
<br>百万漕工衣食所依
<br>以BIM为代表<br>为什么不能推广<br>就是广大从业者保持光脚的不怕穿鞋的状态<br>这样就不会被替代<br>新技术产生的新领域，宁愿单项地切出去（BIM翻模）<br>也不愿意真正融入业务的核心部分<br>如果强行倒逼<br>提高准入门槛<br>会造成很多人没法参与<br><br><br><br>需求导向和愿景明确的<br>个人学习<br>团队推广<br>行业倒逼<br>不明确的，从技术的角度来讲<br>个人学习以应对变化<br>中观层次，储备<br>宏观层次……<br>复杂的系统性问题无法解决<br>近期<br>技术发展不能直接解决问题<br>但是是必要的储备<br>有难以改变的外部力量，但对于必要性的问题，应该在合适的技术层次进行低技术积累？<br>生产关系优化逻辑储备？<br>长远来讲<br>整个行业要靠实践领域的拓展（非空间增量拓展，而是存量背景下的）来保持规模或者扩大规模，新增项目类型<br>这时候的信息技术一方面从侧面提升实践活动的科学性<br>另一方面，也是在市场平衡增长的背景下去提升效率<br>从市场长期变动的角度，运用高新技术提高科学性、置信度、核心竞争力。保住基本盘，拓展赛道，做大蛋糕才是关键。<br>但短期来讲，新技术的直接应用会增加准入门槛。蛋糕做不大，就没法只提高门槛，再倒逼也没用。<br>新技术在这个导向上是中期可以发力的，可能有几种途径？<br><br><br><br>我们需要什么样的信息化设计？<br><br><br>理论与实践的二八定律，技术水平及其普及程度的两个维度和四个象限<br>实践与理论的闭环（项目大表格？辅助证明？）<br>要解释一个为什么新技术无法形成理想应用模式的问题，应该关注哪个层面的技术<br>常规实践闭环：传统的二维施工图，现有的技术体系过于自洽，新技术的实践应用难免要向下兼容（二维图纸！！！！）<br>理论研究闭环：行业、项目、团队上的诸多限制，多少有时候不接地气。能衔接上的往往也不是最高、新的部分。<br>两个闭环之间存在着交流的阻力，供给和需求无法匹配，当然旧方法的效率也是相对饱和的<br>就我们目前，只有一些单体、专项上实现了比较理想的LIM应用（算是在平衡点上）<br>全专业全要素的系统性工作，通过复盘性成果一些技术原型（多少有点难接地气）<br>以竖向设计为例：画等高线的方法和特征线建模的方法，即使在比较理想的区域里也存在着信息差和交流阻力<br>信息差，一方面会成为阻力，一方面也可以成为“忽悠”的切入点，一些人利用信息差，让低水平的项目看起来用了很多高技术，一些人利用信息查让不接地气的技术看起来很普及<br>我们的目标是打通这两个闭环，实现高水平的创新实践<br>达到愿景并非突破上限，而是让整个曲线饱满起来<br><br>引出行业共识、教育等问题<br>普及的激励机制？价值导向？<br>难点：学习成本<br>对于习惯了传统工作方式的一线从业者，新技术和软件的学习成本很高，而现行BIM软件大多针对性地服务与细分专业，在园林工程中的应用体现出“繁琐的软件规则溢出于使用需求”，从不同软件中“各取所需”又增加了软件数量和协同难度。所以如何用大家熟悉的软件去实现信息化功能，普及信息化工作思路，降低新技术的学习门槛是非常值得思考的问题。<br>学习成本靠教育和分工解决？<br><br>合纵连横？<br>合纵，参与施工、咨询、建管等环节的信息化工作，推介本专业的业务逻辑<br>与协作专业、协作团队相配合，按照相对统一的逻辑和标准输出设计产品<br>信息技术部门该以什么形式存在<br>门槛与学习成本<br>分工与比较优势成本<br>中观：管理思维，分工，工业化<br>引出工业化，面向对象，四个模拟？<br><br>1个项目和10个项目的问题<br>从业者规模问题<br>如何突破效率无用论？<br><br><br><br><br>引导：从【纸笔制图+画法几何+二维图纸+传统设计】到【CAD+画法几何+二维图纸+现行设计】实现了工具效率的改变，但工具的使用方法没有改变，人和工具的交互方式也没有改变，设计行为只存在于人脑的思维中。而近二十年技术的蓬勃发展，使得这一格局变成了【多种软硬件+数字景观技术+多维数据与信息交互+设计】，效率大幅提高，带来各种可能性，而且工具越来越介入到“设计行为”之中。<br>
<br>系统（工具和实践活动中其他部分的关系）
<br>方法、工具、应用场景三大子系统，共同构成专业知识系统。这一系统在应对技术推进与来自外部系统的实践需求导向时，体现出协同（这个协同是旧的理解）效应，实现系统的变化、迭代与升级进化，实现更高层次的实践。<br>
<br>交互（人的作用，并非后文谈论的具体的交互，但可以作为引子）
<br>人作为实践活动的主体，通过数据所驱动的交互规则，与计算机所代表的工具主体实现交互，产生系统价值。交互：人机交互，产生复杂系统的1+1＞2的效果。各类数据……像素与矢量说明“交互”。<br>采取人· 机结合,人· 网结合,以人为主的信息、知识和智慧的综合集成,这个技术路线是以思维科学为基础的。<br>——出处是哪儿？<br>
<br>协同（系统的动态发展，并非后文的交付协同，也引不上）
<br>方法，工具，应用场景属于三组不同维度的事物，在技术水平与应用需求稳定的某一时期，形成相对稳定的系统，比如传统纸笔制图阶段，和当时建设速度相适应。当外部环境发生改变，比如工具的革新和建设需求的增长，这一开放系统就会受到外部影响，开始迭代更新。从新技术的探索和怀疑或滥用（无序），演变到全新的工具平台和更高，更多可能性的建设应用（有序）。<br>客观世界存在着各种各样的系统；社会的或自然界的，有生命或无生命的，宏观的或微观的系统等，这些看起来完全不同的系统，却都具有深刻的相似性。协同论则是在研究事物从旧结构转变为新结构的机理的共同规律上形成和发展的，它的主要特点是通过类比对从无序到有序的现象建立了一整套数学模型和处理方案，并推广到广泛的领域。它基于“很多子系统的合作受相同原理支配而与子系统特性无关”的原理，设想在跨学科领域内，考察其类似性以探求其规律。哈肯在阐述协同论时讲道：“我们现在好像在大山脚下从不同的两边挖一条隧道，这个大山至今把不同的学科分隔开，尤其是把‘软’科学和‘硬’科学分隔开。”<br>——出处是哪儿？（能不能勾兑到讨论方式部分？）<br><br>比如Stephen对技术发展历程的定义。<br>具有机电元件的原始数字景观<br>基于数字文档的景观<br>虚拟（非物理）景观<br>具有数字化构思逻辑的算法景观<br>具有数字化建造功能的景观<br>由数字原件强化的景观<br>含有设计原件信息物理景观<br>仿生景观<br>新技术和新风格交替出现，这个是“工具方法应用”协同系统在应对外部变化时产生的升级，风格和方法交替影响，但并不绑定，习以为常的技术曾经也是巨大突破，而如今新颖的风格未来也会有一天变得习以为常。<br>Ervin对数字景观的两种定义：“风景园林的数字化途径”或“数字（风格）景观的营造方法（结构、功能、意义）”体现了数字景观技术“作为工具”和“作为方法”两个概念。 这两个相互交融的概念统筹了八种分类：<br>原始：传统风格景观中的基础电子元件要素。<br>文档：最普遍的体现形式，数字化的基础平台。<br>虚拟：三维建模、沉浸展示、其他的影像形式。<br>算法：主要针对生成式设计，而非算法辅助分析。<br>建造：设备和建造信息直接对接的建造方式。<br>强化：电子元件强化的非传统交互模式的景观实体。<br>CPS：物联网系统统筹下的全过程生命周期。<br>BIO：目前仅存在于概念中的一种模式。<br>新兴的风格往往与高技术相关联，但技术不一定只服务于新兴风格实现。某种类型的数字景观随着技术普及，逐渐服务于全类型审美的景观风格。<br>工具与方法的辩证关系体现出一种循环：传统的风格对应传统的工具，随着工具的发展，逐渐产生了新的或不同维度上的风格，这一风格在未来可能与传统风格相融合，一切又变成了未来视角下的“传统风格”，进入下一次循环。（目前我们可能只经历了第一次循环的前半部分）<br>数字景观技术可以归纳出很多研究领域，每个研究领域有着所代表的技术和软件。这些研究领域的技术本质相通，区别是在不同的尺度和系统下解决不同的问题。<br><br><br><br>现在进入幻想时间<br>请欣赏作文《二十年后的设计师是如何做设计的》<br>愿景的外在形式<br>引出机制篇<br><br>生产力与生产关系<br>讲一个其他行业的例子<br>引出风景园林行业的四次模拟<br>发展路径 假设概述部分的问题都有解决 还需要哪些支撑？会实现哪些愿景？<br>几种可能的愿景？<br>其他潜在的影响因素<br>引出面向对象与工业化？<br>机制？<br><br>层出不穷的新科技<br>引出科技体系<br>宏观层次<br>关注技术变革，加强学习，实现技术普及——引出<a data-tooltip-position="top" aria-label="notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E9%9B%86%E6%88%90%E5%BA%94%E7%94%A8%E4%BD%93%E7%B3%BB" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_信息技术集成应用体系" target="_blank">信息技术集成应用体系</a><br><br>中观层次，设计院内的分工配合到工地上的数字建造<br>概念草图和模型<br>根据草图和模型深化形成信息模型<br>（强调工作流的分枝点）<br>从这个信息模型输出表现图等成果，并直接交付模型<br>（一定要干掉施工图这种成果）<br>结构，用模型直接计算<br>造价，用模型直接出量<br>施工队，如何应用各种模型直接指导施工<br>引出交付逻辑（管理逻辑，中观，工业化、工作流）<a data-tooltip-position="top" aria-label="notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_%E5%8D%8F%E5%90%8C%E4%BA%A4%E4%BB%98" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_协同交付" target="_blank">协同交付</a><br><br>个人层次，使用的软件<br>看看画草图的软件<br>雕刻的软件<br>深化建模的软件<br>成果输出的软件<br>引出交互逻辑<a data-tooltip-position="top" aria-label="notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/7bae9312bb97455dbf1e05ec058b5574#_人机交互" target="_blank">人机交互</a><br><br><br><br>其实以上这些，并没有哪些技术完全是天方夜谭的，都是目前已经实现或初见端倪的。只是没有在风景园林工程设计领域被系统性地组织应用起来。所以很多技术没法发挥优势，无法突破等效性，形成需求导向。<br>反复强调的三个层次<br>后续展开的四部分内容<br>
<br>信息技术如何通过“<a data-tooltip-position="top" aria-label="notion://www.notion.so/da312d389a634d748fe661273e96cb42#_%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%A8%A1%E6%8B%9F" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/da312d389a634d748fe661273e96cb42#_第四次模拟" target="_blank">第四次模拟</a>”改变设计活动的底层逻辑
<br>多种新技术概念如何形成<a data-tooltip-position="top" aria-label="notion://www.notion.so/da312d389a634d748fe661273e96cb42#_%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E9%9B%86%E6%88%90%E5%BA%94%E7%94%A8%E4%BD%93%E7%B3%BB" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/da312d389a634d748fe661273e96cb42#_信息技术集成应用体系" target="_blank">信息技术集成应用体系</a>
<br>如何通过信息化的<a data-tooltip-position="top" aria-label="notion://www.notion.so/da312d389a634d748fe661273e96cb42#_%E5%8D%8F%E5%90%8C%E4%BA%A4%E4%BB%98" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/da312d389a634d748fe661273e96cb42#_协同交付" target="_blank">协同交付</a>，优化分工合作机制
<br>如何通过信息化技术优化设计师的<a data-tooltip-position="top" aria-label="notion://www.notion.so/da312d389a634d748fe661273e96cb42#_%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/da312d389a634d748fe661273e96cb42#_人机交互" target="_blank">人机交互</a>体验
]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/1-数字景观：总论/1.3-信息化设计的愿景.html</link><guid isPermaLink="false">第1部分 数字景观/1 数字景观：总论/1.3 信息化设计的愿景.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:33:35 GMT</pubDate></item><item><title><![CDATA[1.2 软件与工具的思辨]]></title><description><![CDATA[ 
 <br>考虑到实操层面的指导作用，以及技术的实现问题，还是要单独谈一谈软件。软件不等同于技术，但的确是最容易感知技术的载体。<br>先说结论，一种技术没能推广，背后的问题很复杂。但一款软件，可以说，如果好用，肯定已经有很多人去用了。只不过，一种软件工具并不一定被按照软件开发者的思路被使用（CAD的例子，天正建筑的例子）<br><br><br>还是以最令人头疼的BIM为例，（举例：BIM等于Revit的刻板印象。）<br>软件定义的辨析，需要从两方面入手<br>
<br>即软件创建的对象所抽象的内容
<br>以及相应的工作流程方法，是否按照某种专业业务逻辑开发功能
<br>从计算机的实现角度来讲，计算机所做的事情，都是在模拟“对象”，每一个对象都由“图形”和“非图形”部分组成，区别在于，有一部分软件模拟的是图形或画面，模拟的结果由人进行灵活的二次解读，以应用于更多的专业领域。有一部分软件则模拟具体的专业内容对象，以及专业规则。但从能力上讲，所有软件都有作为信息模型软件的能力。<br><br>指具有特定功能，针对性的专业细分，再预设好的规则下进行信息模型创建的制图软件，如Revit，ArchiCAD，Bentley系列等。软件的本质并没有区别。BIM软件大多是弱化或取消了底层灵活开放的管理方式（如Revit取消图层），从而避免不同使用习惯造成的混乱，转而强制大家用软件预设好的规则，去创建固定分类的对象，这也就导致了软件对不同工作内容兼容性的降低，而趋向于专业细分化，也就降低了设计师在使用时的“自由度”。<br>计算机的角度：信息模型软件创建的对象是抽象自具体的现实事物<br>人的角度：人参与到这一抽象过程，和计算机的工作平行协同<br><br>指主体部分（不包括插件及二次开发）仅具有图形建模功能，而并不具有针对具体专业的、模块化、对象化的信息模型功能的软件，如AutoCAD，SketchUp，Rhinoceros等。大家在以往使用时，更多关注最终成果的展现（打印出来的二维施工图，以及渲染出来的三维可视化图纸）而软件使用过程中产生的文档实质上只作为过程，而不是最终成果。也不会从“映射现实”的角度出发对系统性地为软件中的对象进行分类管理。（如CAD施工图绘制中的图层管理更多地服务于打印线宽，而非系统分类）<br>计算机的角度：常规制图软件创建的对象抽象的只是图形<br>人的角度：图形对象与现实中工程对象的抽象过程由人脑实现，人的工作和计算机的工作线性连接<br><br>在计算机技术发展初期，并不存在“制图软件”和“BIM建模软件”的划分，（统称为“计算机图形软件”）。<br>所以判断某个人是否在用某种技术，要看工作的业务逻辑，而不是看使用什么工具。<br>真正造成两类软件概念分化的，是相应的工作方法，或使用习惯。<br>只使用了软件的制图部分功能，所创建的是图纸，是成果，软件虽然创建了对象，但这一对象不作为完整的核心成果。就会形成“面向过程的工作模式”，软件只提供部分信息，而只有人脑才是汇集了所有信息的核心。<br>而使用软件模拟现实对象，则是人在计算机环境下模拟了全部信息，面向对象的工作方式。面向对象的技术（BIM），面向对象的编程。<br>传统软件和BIM软件的划分主要在于抽象思维和工作方法。本文实际做的事情就只有一件事——改变传统制图软件的应用方法。而并不完全侧重于新软件的学习或开发。<br>但软件与格式并非是定义BIM的唯一标准，BIM是一类技术，涉及很多软件，概念设计常用的图形软件（如SU、RHINO）也可以通过插件实现类似BIM的功能，与BIM软件形成协同的工作流。<br>数据本质问题：同样的问题有很多解决方法关注数据的本质，才能突破软件的限制。软件要祛魅化，不要妖魔化，没有人会因为CAD水平高而影响设计能力。平台与环境的改变，只是纸笔向计算机再向信息化工具的进化。<br>（承上启下，引出本质是对数据和信息的处理功能）<br><br><br>能否满足需求，或者是否具有比较容易实现的拓展空间。<br>功能需求可以分为以下几个方面：<br><br>对象化模拟表达、<br>计算机技术的重要原理之一就是利用数字技术对现实事物及逻辑进行模拟。构建虚拟与现实的映射，这一映射的两端就有两个对象——现实世界对象和软件中的模型单元对象。工程建设领域，就是“工程对象——模型对象”。<br>抽象的主要内容，包括（几何图形信息+非几何属性信息）<br>BIM基本逻辑中“信息挂载”“交付环境”的实现，<br>内置语义系统<br>多层级单元嵌套<br><br>格式转换<br><br>信息模型“方法”的实现逻辑<br>“用传统制图软件”做BIM的可行性，体现为以及软件的拓展空间（包括二次开发潜力，融入宏观BIM技术体系的能力）和推广价值。<br><br>优化体验，但并非技术实现的必备条件<br>可视化管理，视图问题？<br>隔离和强调，su组件的隔离，cad图块的隔离，bim软件的极度繁琐<br>交互体验<br><br><br>为降低使用门槛，选用常规软件，排除干扰项。<br>以AutoCAD，SketchUp，Rhinoceros为例<br>使用门槛，可以从CAD入手。在不借助二次开发的情况下，CAD和Rhino已经可以实现“信息挂在”和“信息交付”。<br>开发门槛，CAD二次开发门槛较高，但是gh的二次开发门槛较低，过渡平滑<br>这些软件都可以通过二次开发，来强化实际能用功能，或者优化挂载和交付等“BIM动作”。<br>CAD的二次开发已经较为成熟，如种植设计插件。但编程还是作为比较硬性的门槛。<br>Rhino + Gh 的二次开发学习门槛较低，过程较为平滑（可视化变成——代码块结合可视化编程——IDE环境下的开发），让设计师更容易介入规则方法的指定，不让技术手段的高度成为否决性的阻碍因素。本文的实例部分主要以Rhino + Grasshopper及其二次开发为主。<br>（GH已经很好学了，如果GH都不愿意学，BIM软件肯定更不愿意学，本文中的方法比传统方法稍显罗嗦，但BIM方法绝对更罗嗦）<br><br>（对象化表达和交付）<br>信息模型“内容”的实现逻辑<br>前文提到 Object = Geometry + Attribute<br>Rhino把每个对象的属性都开放给用户，包括图形及其几何属性，图层名称，对象名称，用户属性字段。其中图层名称和对象名称是软件预设好的属性，而用户属性字段是可自定义的。<br>CAD中大部分对象的属性是固定的，只能实现部分几何属性的读取。不借助二次开发的手段，只能通过图块的方式实现属性定义。<br>SU中的图元也不具备挂在属性信息的能力，但通过组件自定义属性可以挂载信息。<br>抽象规则，表达逻辑部分的示例<br><br>“面向对象的开发”对BIM过程的模拟<br>采用“面向对象的编程技术”对常规制图软件进行二次开发，可以很好地模拟BIM技术体系。类（Class）创建过程中对现实事物的抽象，与BIM技术体系中对工程对象的组织构架高度相似。<br>以软件的问题为例，主流BIM软件（如Revit等）创建的都是房屋建筑工程对象（门窗、墙面、屋顶……），功能的定制化程度较高，执行的是房屋建筑领域技术标准。所以对于我们来说并不好用。大家比较熟悉的常规制图软件（CAD、SketchUp、Rhino），所创建的是图形对象（点、线、面、体），不受限于某一技术标准，功能比较灵活，也具备基本的信息管理功能，只要形成合作团队内的技术规范，由少部分人进行技术开发，就能实现比较理想的“LIM设计应用”。这些实践经验也可以给今后“技术标准”的完善提供基础。<br>Rhinoceros和Autodesk都可以进行基于.Net平台的二次开发，文件格式的兼容性较好（如图块可以实现两个维度的信息传递）。SketchUp（不借助二次开发）不能直接接受属性信息，但是可以通过（图块——图块引例——组件）的逻辑实现几何构件的传递。<br>当前主流BIM软件如Autodesk体系，都有基于.Net平台，C#语言的编程接口。<br>SU的二次开发资源也很多，但笔者能力所限，在本文体系中更多地作为素材供给，或者一个运行可视化表达模型的终端。但仍留有接口。<br>这些制图软件也已经有了面向IFC的插件开发，以及相应的工作流。<br><br>自主开发与技术积累<br>给交付和交互兜底？<br>学习成本和语境壁垒虽然存在，但从业者对于新技术的需求并不会消失。目前由于软件开发商对于细分垂直领域的开发意愿较弱，而行业自身交叉领域的人才和IT从业者的技术力量介入又比较有限，造成了传统工作方式和新兴需求的变现之间存在着一个过渡期。<br>另一方面，由政府、业主方主导的信息化管理平台开发，对从业者形成倒逼的趋势。但对基于“共性”目标导向的平台的学习和使用，更多地体现为服务整体、服务他人。而对自身行业的信息化发展作用较弱。<br>所以，本文尝试构建一种降低“技术基础”学习成本，弱化“语境”限制，从风景园林设计师、建模者自身小而具体的应用需求出发，用更熟悉的软件，更直接发挥价值的技术，去积累应用模式、普及信息计划思维的“工作环境”。<br>P-BIM的问题（也是一种权宜之策？）<br>好处——容易上手<br>比起更成熟的软件产品，不够稳定，不够产品化，算法复用难度较大。<br><br><br>一款软件不能解决所有问题<br>要习惯多款软件配合<br>熟悉格式转换<br><br>核心平台<br>Rhino<br>Autodesk<br>SketchUp？<br><br>专项功能的实现<br>地理信息处理和分析<br>实景三维数据处理，context capture<br>其他数据处理，如全景相机的专用软件insta360<br>评估分析类的，fragstats<br>设计建模，DCC软件<br>拓展工具<br>
<br>基础办公工具，和信息化工具的关系 功能整合和替代，一些思考
<br><br>本书主要选用Rhino，但会尽量弱化排他性的功能<br>并尽量通过Rhino去实现其他软件的功能，来回应031、032中的观点<br>但也会介绍rhino和其他软件配合的思路<br>其他必须选用的软件？或者是生态位？<br>CC？<br><br>Word和obsidian的思辨<br>学习rhino和gh顺序的思辨<br>客观现实，大家需要在一个足够熟悉舒服的环境下做设计<br>现阶段：<br>软件开发的关怀度不足，即使Autodesk系列也有很多槽点<br>没有全才软件，必须要取舍<br>行业影响力不足，也没有人去专门开发<br>以后随着技术发展，会有所改观，]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/1-数字景观：总论/1.2-软件与工具的思辨.html</link><guid isPermaLink="false">第1部分 数字景观/1 数字景观：总论/1.2 软件与工具的思辨.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:32:26 GMT</pubDate></item><item><title><![CDATA[1.1 风景园林信息化设计]]></title><description><![CDATA[ 
 <br>为什么说得再多也不够，但说的太多又不行<br>本书主要聚焦风景园林工程设计领域：<br>
<br>从必要性、需求导向入手建立信息化技术应用的总体认知和愿景。
<br>从技术体系到底层逻辑，分享关于信息化技术应用机制的思考。
<br>通过不严格依赖特定软件的方法，为学生、设计师提供实践指导。
<br><br><br>规划建设领域信息化是一个多维度的复杂议题：<br>
<br>专业上涵盖规划、建筑、市政、风景园林等多个细分领域；
<br>流程上涉及从规划到工程项目建设实施的“全生命周期”；
<br>除规划建设从业者之外，还离不开信息技术行业的支撑。
<br>受笔者能力所限，本书讨论的范畴将划定为“风景园林工程设计领域的信息化应用”，简称“信息化设计”。但立足于某一具体领域的信息化，会发现在专业、环节、信息技术等维度都面临融合与被融合的的问题。所以非常有必要关注风景园林工程设计领域与三方面环境之间的共性和差异。<br><br><br>在讨论“风景园林”时，要明确语境和层次，本书中将“专业”作为更广义的概念，包括学科和行业两个层次。<br>
<br>专业：采用广义的理解，包括学科分类、产业部门分类、工作和职业，作为描述领域差异的主要用辞。狭义的等同于学科。（《现代汉语词典》）
<br>学科：主要指高等学校的分类（如《普通高等学校本科专业目录》）
<br>行业：主要指国民经济活动的性质（参考《国民经济行业分类》、《国际标准行业分类(ISIC修订本第4版)》、资质体系等）
<br><br>学科视角上，参考吴良镛先生的观点，风景园林学科是和城乡规划、建筑并列的人居环境科学三大基础学科。<br>“以建筑 、园林 、城市规划的融合为核心 (architecture , landscape architecture , city planning), 建构人居环境科学的学术框架……促进“建筑—园林—城市规划” 学科综合地运用多种相关学科的成果 , 进行物质环境的建设……在规划 、建筑和园林三者构成的学科外围 , 组织带动多学科(土木 、水利 、能源、生态 、环境 、资源、地理 、社区 、经济 、文化 、艺术等)共同工作。“<br>——《“人居二 ”与 人居环境科学》 吴良镛<br>从对现实中实体概念的覆盖来讲，三个学科基本涵盖了宏观、微观、中观三个尺度的实体和关系，并可以较好地延伸覆盖到多个相关专业。<br>就这三个学科的信息化来讲：<br>
<br>规划学科认知度较高的核心技术是GIS
<br>建筑学科认知度较高的心技术是BIM。
<br>风景园林行业暂未出现影响力和认知度和上述技术等同的概念
<br>目前风景园林学科的信息技术应用，总体上更偏向GIS，在微观、工程建造尺度上，也有涉及参数化设计等技术，但并未形成独立的技术概念。近年来全尺度信息化领域常采用“GIS + BIM”这种概念，并未提及风景园林这一中间层次，或者说，直接将风景园林专业囊括在内了，这反映出了一些行业层面的问题。<br><br>但走出学校，从学科变成了行业。我很失落地发现，风景园林专业的认知度、影响力，在部分语境下没有想象的那么高——<br>
<br>工程建设企业资质体系中，仅就设计资质来讲，并不属于14个行业之一，只是一个通用专业资质。
<br>注册执业资格体系中，风景园林专业并无注册执业资格，且专业设置和专业人员配备上只在风景园林工程专业资质中有要求。
<br>标准规范体系中，风景园林行业信息化相关的标准发展滞后，信息化领域受建筑和大市政行业主导的情况很多。
<br>所以风景园林专业信息化核心技术确立的难点，一方面是因为尺度上跨在GIS和BIM之间，另一方面是从行业规模和影响力来讲，和房屋建筑和大市政主导的BIM完全不对等。所以在提及风景园林专业的信息化核心技术时，总是找不到一个合适的用辞。<br>回顾刚才的“三分天下”，可以发现那个构想并未实现，风景园林一级学科的取消，也体现了很多问题，但这里不做展开。<br><br>但问题出在哪？是吴先生这一“三分天下”的体系么？<br>消极的现状，是因为专业信息化的核心技术不明确，相对宏观的规划专业多做一些，相对微观的建筑专业多做一些，相关学科多做一些，风景园林就无事可做了。<br>往积极的方面去想，其实风景园林是一个综合学科，且在尺度上位于宏观到中观的衔接位置。风景园林专业位于最具备综合性、系统性的位置，实际上大有可为。尤其是生态文明建设的信息化领域，风景园林专业应该去思考如何创建数字孪生世界中蓝绿空间的本底。<br>中国式现代化是人与自然和谐共生的现代化。人与自然是生命共同体，无止境地向自然索取甚至破坏自然必然会遭到大自然的报复。我们坚持可持续发展，坚持节约优先、保护优先、自然恢复为主的方针，像保护眼睛一样保护自然和生态环境，坚定不移走生产发展、生活富裕、生态良好的文明发展道路，实现中华民族永续发展。<br>——中国式现代化<br><br><br>正如同专业概念下学科和行业的层次划分一样，我们讨论的事情，也包括课设、科研、项目实践等等。<br><br>
<br>工程尺度的设计题目：面向学生、学科的角度去理解。 “工程尺度”主要是区别于规划类的题目，小到一个节点，大到一个公园化的片区。 题目是设计，区别于规划和研究，而且并非局限于“工程”。
<br>工程类项目的设计环节：面向从业者，行业的角度去理解。 工程建设项目全生命周期中，从投资决策辅助、方案设计到施工图交付、施工现场服务。 先从设计环节出发，有些价值是需要在全周期中去实现的但“新型基础测绘衔接，非图纸智能建造交付，非图纸的审批审查报建”都不是能从设计师的角度出发直接解决的。
<br><br>也并非关注某种设计风格或方法，而是作为工具的普及应用。<br>即不讨论钉子钉在哪儿，而是讨论用锤子还是射钉枪。<br><br>信息化还涉及很多管理层面的事情。小到课程小组的分工合作，项目组的合作，大到设计企业的数字化转型，大型项目管理。但笔者能力有限，并不能提供成熟的管理经验，只能提出作为执行层的建议，执行层对管理的诉求。<br><br><br>从设计师的立场出发，设计师而非程序员，能为信息技术做些什么？<br><br>先解释两个范畴的定义<br>以BIM为例，其内涵可分为“技术基础”和“实践应用”两大范畴：。<br>
<br>研发范畴：前者主要和软件平台、交付格式开发相关，相关的概念（IFC、IDM、LOD、编码等）对规划设计实践工作指导作用极弱，在初学阶段又严重分散学习注意力，提高BIM技术的“门槛” BIM环境和交付技术并不是每个人都需要去操心的。
<br>应用范畴：而“实践应用”范畴发挥价值的“参数化、三维正向设计、量化管理”等技术和思维并不从属于“BIM技术”，只是与不同领域的实践需求、技术基础标准、定制化软件开发相结合，形成了“LIM、BIM、CIM”等应用体系。
<br><br>从BIM到LIM设计<br>专业聚焦：从广义的工程建造领域到风景园林领域，关注风景园林的个性问题，如植物生长<br>阶段聚焦：全周期局限到关键词/风景园林工程|风景园林工程设计，各阶段应用水平不一<br>角色聚焦：技术范畴，应用范畴，设计师该关注什么，软件和技术标准的问题容易造成困扰，我们可以先不关注<br><br>研发范畴、技术标准领域的限制问题展开：语境壁垒给新技术发展带来的阻碍，以及技术的潜在发展路径（逻辑储备等等）<br>不同于房屋建筑、市政工程等领域相对完善的关键词/全生命周期|全生命周期 “技术基础+实践应用”体系，风景园林行业在施工、运维等环节或EPC模式中尚未形成强有力的应用需求导向，相关的“技术标准”和软件产品也一直不够完善。技术基础的“门槛”和不同专业实践领域的差异共同形成了信息模型技术普及的语境壁垒。进一步提高了新技术的学习成本，也不利于各专业从自身出发总结需求和经验，阻碍了“全尺度、全领域、全要素”信息化技术语境的形成。<br>因为技术门槛的存在，使得部分掌握技术的人形成技术垄断。一方面体现为不同专业之间主导语境受技术力量影响的倾向，另一方面体现为“信息模型”从业者以新板块的形式介入，分走规划设计市场份额。<br>研发范畴的需求总结，作为“产品经理”，需求和逻辑储备，挖掘、总结需求。而非研发指导。<br>技术领域上，我们不去讨论软件的开发，数据标准的制定，但要形成应用逻辑的储备，需求导向的储备。形成自己的方法体系积累<br><br>设计师之间的经验分享，技术普及应用，而非前沿研究<br>往近了说，提供一种方法，解决一两个问题<br>往远了说，传达一种思想意识<br><br><br><br>（011）所以，仰望星空地，本书想要通过对风景园林专业信息技术的讨论，来建立本专业更明确认知体系，强化风景园林专业在信息化领域的核心竞争力，在中国是现代化发展中扩大专业影响力。<br>（012）回过头来，脚踏实地的，本书只能聚焦于风景园林工程设计这一环节，分享一些经验和思考，为一线设计师和学生提供帮助。<br>（013）笔者也从未脱离作为一名设计师的身份，很多技术研发的问题也的确不在能力范围之内。但本书希望能通过想法总结和经验分享，促进普及推广、同时为未来针对风景园林信息技术的研发储备一些需求和产品原型。所以并不是讨论某种技术，或者某个单项方法，不是BIM、LIM或者参数化设计。而是这一范畴内，可能出现的各种问题<br><br>风景园林工程设计，实际的场景主要是做项目，做课设<br>信息获取，模型创建，分析等，能用到的技术方法，及其底层逻辑思考<br><br>生产关系决定生产力，只能抛砖引玉，未来期望能形成比较完善的体系<br>方案表现谈的少一些<br><br><br><br><br>引用Stephen Ervin教授对数字景观的解释：“风景园林的数字化途径”或“数字（风格）景观的营造方法（结构、功能、释义）”<br>不同高校与学术主体的认知<br>
<br>GSD国际数字景观大会（DLA）
<br>北京林业大学：以绩效评价为导向、数据驱动的数字景观体系，建立“数字景观研究室”。
<br>清华大学：风景园林信息化专题研究与LACIC。
<br>东南大学理论体系与数字景观学术周（seuDLA）。
<br>西安建筑科技大学包瑞清参数化知识体系。
<br><br><br><br>在以往的信息技术普及推广工作中，存在以下难点：<br>
<br>只讲操作又解决不了环境的问题，总是需要解释很多，为什么这样做，为什么不能那样做（无的放矢的问题，环境预设的问题）（对应021）
<br>成果定位的问题，手把手的实操教程，到标准规范，到学术研究成果之间不好找定位（门槛的问题？定性和定量的问题）（对应022）
<br>软件选择、应用环境的问题？（逻辑和实例）（对应023）
<br>明确讨论的深度，能解决的问题在后续展开，不能解决的问题可以抛出疑问大家思考<br><br><br>（衔接讨论范畴中能解决和不能解决的问题来引入）技术应用条件会有很多空缺，导致无的放矢。需要补充一个预设，但基于补充的预设放回现实中，又是纸上谈兵。宁可纸上谈兵，也不无的放矢。避免纸上谈兵，则短期需要向下兼容，长期需要……<br><br>一个项目中各环节技术水平不同。一个团队中水平也不同<br>可能只有你一个人会犀牛，会正向设计。<br>但一个人形成的工作流很有限，必须假设一个团队或项目的技术水平的环境，才能去讨论一种技术方法的作用<br><br>因为技术认知的缺失，所以很多环境的预设也是空缺的。又不能把风景园林专业完全置于其他专业主导的语境中。风景园林的BIM项目，甚至房屋建筑的BIM项目，有几个不是翻模，而是实打实地和项目真实协同进展的。普及的BIM软件，也少有针对风景园林专业开发的。所以如果非要用狭义的标准去谈论风景园林专业怎么做BIM，就完全是无的放矢。或者说是在打你旁边选手的靶子。<br>虽然实操中，总有权宜之计，补全条件和预设，或者干脆切割出来，翻模，去单独地做。但如果想要明确专业自身信息化发展的愿景，提取逻辑和机制，就必须要给自己立一个靶子。<br>比如要提出一个新概念，比如LIM。但是LIM相关的技术标准，应用实例，各方各面都很缺乏。所以难免会有纸上谈兵。<br>那么多新技术，总会有很多没实际用过的<br>会有很多现实中并未成为常识的预设<br>但技术力量有限，难免有“纸上谈兵”的部分，就只能点到为止，合理留白，抛砖引玉。范畴部分，说我们可以把自己想象成产品经理，但实际的层次类似于研发项目初期或预研阶段，入门产品经理在头脑风暴<br><br>向下兼容可以让纸上谈兵不完全没用<br>但长远来讲还是希望让这些纸上谈兵的经验成为未来发展的技术储备<br>但衔接的部分，难免有一些“过渡性”的方案，低成本的原型开发<br><br><br>标准规范和科研成果的限制，束手束脚的问题，面向群体的问题<br>教程之上的拔高，现象到本质的归纳<br><br>并没有精力和能力去做大量的定量研究。所以愿景部分主要是主管观念的表达。<br>可以当成是朋友闲聊。有共鸣是最好，质疑也很正常。<br>“软科学”与“硬科学”。不能按照硬科学的标准来要求。<br><br>但讨论工具的使用情况时候，会涉及一些类似针对从业者的社会研究，的确没那个能力，没有那么多样本。会用一些定量分析的体现形式，图表之类的。但可能样本量不足，而且是辅助感性主管观点表达的。并不是为了追求“高水平”科研。<br>开放系统的复杂性，没有绝对的定量。针对学科具体问题需要划定范围并定量<br>笔者只能基于自身的处境，能反映一部分情况，肯定有比我处境更好的，或者某些痛点更严重的。还需要调整，采纳，批评指正<br><br><br>我还是会用自己最熟悉的软件去实现，打个样<br>但并不代表必须要用这种软件来实现，会归纳出背后的逻辑，并提供一些其他软件的实现方法或开发思路。<br><br>用最熟悉的软件去实现。但尽量提取核心的逻辑。<br>当然具体的应用，或者开发，还需要结合具体的情况，直接迁移应用并不保证理想<br>只是提供一种思路<br><br>简述常用软件的实现方法<br>选用情况或不同实现方法的转换思路供参考]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/1-数字景观：总论/1.1-风景园林信息化设计.html</link><guid isPermaLink="false">第1部分 数字景观/1 数字景观：总论/1.1 风景园林信息化设计.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:30:37 GMT</pubDate></item><item><title><![CDATA[2.2 集成体系]]></title><description><![CDATA[ 
 <br>素材，能力，弹药……<br>理想技术体系，不同技术对于不同层次的作用，从个人到行业<br>建立不同技术的衡量指标？评价体系？需求度、推广难度、……<br>按照实务篇的五个方面展开<br>技术之间存在重合度，需以应用导向为区分。不必掌握，建议了解，借助外部资源。<br><br><br><br>从“二维测绘”到”多维交互”<br>信息技术在规划设计领域的普及，多从工具或载体的迭代开始：比如从“制图工具与图纸”到“制图软件与电子图纸”的过程。工程设计项目中，我们拿到的第一张图纸，往往就是场地现状的测绘图纸。但随着实践需求的演变，很多问题不再是一张图纸就能解决的了。<br>有没有遇到过以下场景：<br>测绘图纸不准确（地物、台阶、挡墙数量、宽度不准确，打架，现场变更）<br>植物形态测不准（画组团，标数量）<br>测绘图纸被拍平（高程点无三维信息）<br>原因挖掘01：工作量的限制，都是新建项目为主，大部分现状可以推翻，所以台阶、挡墙测那么准也没用，即使是涉及文保单位，古树名木等，也能很容易区分哪些保留，哪些推翻；但随着存量发展的影响，对测绘的准确度的要求逐渐提高。<br>原因挖掘02：工作量的限制，比如组团植物。但植物保留，结合植物形态做设计也很重要。<br>原因挖掘03：向下兼容，以上两点，都是有更好的解决方法，不管是上劳动力还是上技术，但目前的方法可以和现有的规划设计方法相结合，靠土办法解决问题，所以没必要上技术。<br>甚至有时候上技术还会带来麻烦，比如因为大家用不到CAD的三维功能，带有三维信息的测绘图纸，反而会给二维制图带来麻烦，所以很多图纸也就把标高点拍平了。<br>这种“向下兼容”的闭环，极大地阻碍了新技术的应用。使得设计师仍在基于平面图纸和照片，靠记忆和空间想象力在人脑中抽象地还原现状条件。即使有更高效的感知手段，也派不上用处。<br><br>全景照片<br><br><br>“新型基础测绘，是对基础测绘的继承和发展，是在保持基础测绘基础性和公益性不变的前提下，从建设内容、产品形式、服务模式、管理方式、技术手段等方面进行探索创新，形成以基础地理信息获取立体化、实时化，处理自动化、智能化，服务网络化、社会化为特征的信息化测绘体系，在实践中不断总结，逐步形成高效的生产、管理、服务体系。”<br>是测绘领域一个综合性的概念，在关键词/风景园林工程|风景园林工程领域，可以体现为新的感知测绘技术的应用。比如遥感（虽然算不上新技术，但主要体现在尺度和信息维度、应用领域的迁移），实景三维技术（又新又好），影像采集技术（全景摄影等等……）<br>作为设计师，要了解这些东西概念，怎么用起来。【第02章展开介绍】<br><br>这些新技术从最直观的层面上来讲，可以提供三维几何图形信息（&nbsp; 模型——几何形状，空间位置……）。&nbsp; 但进一步来说，我们要知道这个模型单元是什么，起一个名字，（引入语义建模的概念）这个名字就超出了三个维度之外<br>除了名字之外的“非几何信息”——概念，属性，非几何，视觉（颜色材质），环境信息<br>其他，多有交叉重复……信息或数据的分类是一个非常复杂的问题，（模糊的界线？以时空信息为例）这里只是一种实用导向的理解方法：以“三维几何”表达为界， “几何信息”与“非几何信息”。这个概念后续还会用到。<br>高质量创新实践，除了工程本身的精确之外，还对过程的理性提出额更高要求，在感知现状的过程中，除了精确直观三维空间信息之外，还需掌握很多其他维度、形式的信息。还包括了图像、颜色、激光回波强度等……伴随着预处理还有其他前置的业务介入，会形成“多源异构数据”<br>“多源异构数据”<br>概念解读：多种来源，不同形式<br>广义的延伸：物联网、传感器技术、大数据获取技术<br>像素<br>空间<br>三维模拟<br>大数据、地理空间大数据<br>多源异构数据<br>多源主要指数据来源多样化，如遥感影像、摄像头、问卷调查、手机信令、GPS追踪等等。<br>异构主要指数据结构上的差异性。数据结构层把城市中纷繁复杂的数据归为三大类，针对每一类数据设计了相应的数据存储模型，确保了城市操作系统的扩展性和一致性。这三类数据包括：<br>
<br>结构化数据：以电子政务类表格数据为代表，通常以人或者机构的ID为锚点来聚合不同的信息，如名称、职业、收入等；后续会演变出基础库、主题库、专题库等一系列组织形式。
<br>非结构化数据：以视频、图像、语音和文本为代表，后续大多需要经过分析处理变成结构化数据才能被使用。
<br>时空数据：以地理信息、IoT、轨迹数据为代表。
<br>作者：近似透明的蓝<br>链接：<a rel="noopener nofollow" class="external-link" href="https://www.zhihu.com/question/45940859/answer/1716351657" target="_blank">https://www.zhihu.com/question/45940859/answer/1716351657</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>多源异构数据，引出分析<br><br><br><br><br>社交媒体<br><br><br><br><br><br><br>“信息模型”技术。最开始大家提BIM（Building Information Modeling），但是随着各领域信息技术的进展，这个首字母B也被替换成不同的代表各专业的字母。<br><br>BIM这个词汇有多种拆分和理解方式：我们先把M理解为Model模型，关注主体概念“信息模型”，参考上一节中几何与非几何信息的理解方法。&nbsp; “模型”——三维模型，几何信息；&nbsp; “信息”——三维模型之外的非几何信息。加在一起就是挂载了非几何信息的几何，或者几何与非几何信息的整合模型。得到主体和操作的对象“信息模型”&nbsp; 可以冠以不同的专业首字母，或将Building开放式理解。当然这对这一技术操作主体对象的理解。<br>但技术所操作的对象不能涵盖技术的全部概念，所以就BIM更广义和整体的角度来讲，M应该理解为Modeling，代表模型的创建与使用技术（体系），同样可以将Building Information理解为房屋建筑或广义工程建造领域关键词/全生命周期|全生命周期的各类信息，其中包括各专业领域的几何与非几何信息。如需强调不同专业领域的个性化问题，再进行首字母的替换（如LIM）<br><br>明确了BIM的概念，也就可以理解其拓展概念<br>专业领域发散：X的替换，不同专业领域、时、空概念BIM LIM EIM WIM （甚至GIS的部分交集，放在哪儿更好？）<br>应用阶段发散：从“全生命之周期”中截取的子系统<br>CIM，BIM，LIM<br>技术本体发散：信息模型技术，参数化设计技术（好比编程之于软件开发，好比钢笔的使用和书法艺术）， （甚至GIS的部分交集，放在哪儿更好？）<br>相关联的技术，网状体系<br>规划设计的有效信息经常在多环节的协同与交付中出现错漏且不易追溯。建筑、市政等行业正逐渐通过建筑信息模型（以下简称BIM）等技术克服上述问题。风景园林信息模型（以下简称LIM）技术整合地理信息系统（GIS）与BIM的技术及思维，利用挂载各类信息的三维模型对风景园林工程各环节工作进行管理。地形模型在信息模型的建立过程中具有较高优先级，是体现LIM从到BIM尺度纵深的重要载体。<br>比如CIM，IM家族的新兴热点词汇。C是指City城市。那么CIM可以理解为是城乡规划或城市设计专业的信息模型技术吗？其实，CIM主要面向（信息化或智慧）城市规划建设与运行管理，或者说“数字孪生城市”，一般体现为“数据库—技术核心—业务板块”模式的信息化平台，除BIM技术外，还会整合GIS、IoT等技术作为数据来源。规划师是参与者，为CIM供给数据，并不是CIM的创建者或主导者。（笔者更倾向将GIS看作BIM在规划领域的平行概念，更能反映同类技术在不同空间尺度中的应用。）<br>LIM（Landscape Information Modeling）针对风景园林专业，同BIM技术类似，服务于行业各环节参与者（并非只针对管理者）。LIM的尺度跨度大，问题涉及范围较广：上可在地理空间层面和GIS对上话，下可到施工建造层次与BIM肩并肩（“观宏大，治精微”）。所以说LIM不是BIM体系下的某部分软件，而是自成一套理论体系，与相邻领域存在交叉重合。非要说具体软件的话，可以先关注风景园林专业个性化的核心竞争力。<br><br>风景园林信息模型(Landscape Information Modeling，以下简称“LIM技术”)的概念由哈佛大学Ervin教授提出，衍生自BIM技术，是面向风景园林行业的独特表达，以实现园林工程项目从设计、建造到后期运营管理的信息无损交换为目标。<br>平台化：LIM能够集成相关的数字技术、集成相关专业，为风景园林设计提供高效协同工作的平台，具有独到优势。<br>无损化：保证在不同设计阶段、不同流程中的设计要素信息能够完整的无损交换。<br>全周期化：唯一能系统化支撑从设计到建造的全过程的技术。从设计分析逐渐向实施建造方向的全周期应用。<br>LIM技术将帮助我们突破以二维图纸为核心的工作方法<br>实现“以三维模型为核心，全流程正向设计，模型指导各项工作”的理想协同模式<br>Grading<br>Assembling<br>种植<br>Prototype<br>LIM技术可以在数字环境中对地形进行高精度模拟，优化二三维信息的转换方式，增强方案的实时可视性，并将地形与其他设计要素进行关联，实现更符合施工建造精度的建模。<br>相较于建筑、规划、市政等专业，笔者认为竖向设计和种植设计应该是风景园林专业比较个性化的核心竞争力。（应该不用防杠）<br>1）竖向设计：一般来讲，建筑师更关注建筑周边的地形营造，规划师更侧重大尺度的地理空间格局。中间尺度有一大段空白是属于风景园林设计师的，包括山水格局塑造、雨洪管理等等。目前比较成熟的可应用于竖向设计和道路场地设计的软件是Autodesk Civil3D。有兴趣的读者可以持续关注本公众号，后续内容将会展开介绍。<br>2）种植设计：不用说业务空白，种植设计本就是园林和园艺专业的核心竞争力。但是植物建模在信息模型技术中一直是难点，主要在于树种库与模型轻量化的问题。这些问题的解决有如下几种方向：<br>比如通过代理物件（Agent Object）技术将渲染器和信息模型软件相结合，比如Revit + Enscape。或者直接在同一平台下将树种库、种植设计与渲染表现相结合，如新兴国产软件光辉城市Mars景观版。当然Mars现在也开始支持通过代理物件与建模软件相结合，所以说关键还是谁的树种库更好<br>LIM技术的发展尚处于起步阶段，从业者在技术体系的构建中应更关注专业核心竞争力，抓住竖向和种植设计两大要点，其他方面与相关专业比较成熟技术加强协同、迁移与借鉴。LIM的实践探索应从大尺度研究分析和小尺度建造均衡发力。现在明显偏科向大尺度，因为园林工程变化多、重复少，与现状关系较为复杂，传统BIM技术在园林工程建造领域应用收益也有待更多实践论证。<br><br>从BIM到GIS<br>地理设计<br>尺度：相对宏观<br>内容：图形+属性字段<br>应用：规划研究分析，规划成果表达<br>大尺度，弱三维，融合化<br><br>引出设计之外的<br><br><br>设计之外，设计和全生命周期的配合<br><br>造价，施工管理，<br><br>智慧监测<br><br>主要是借助传感器与物联网实现交互或者监测<br><br><br>获取和创建信息的技术已经如此充沛，已经可以构建“黑客帝国”一样的虚拟自然<br>但当人置于虚拟的自然中，考虑人的使用以及人作为感知对象的时候，就是全新的话题<br>VR、AR、MR<br>全息影像技术<br>对虚拟环境的展示、感知和交互<br>除了智慧互动的新颖体验之外，也可能成为设计师做设计交互的新方法（钢铁侠电影中的画面）<br><br>智慧交付，智慧审查<br>如政府CIM平台建设<br><br>交付体系和交付环境<br><br><br>计算机视觉，AIGC<br>ChatGPT到大模型<br>编程<br><br>国家发展改革委 中央网信办印发《关于推进“上云用数赋智”行动 培育新经济发展实施方案》的通知<br>三个重要概念，云计算，大数据，人工智能。这些概念乍一看与我们的专业实践关系不大。<br>但实际上我们已经见过，甚至用到过很多，未来也会有更多的交叉领域场景。<br><br>和大数据技术类似，我们在规划设计中或许不会直接接触冠以“云”字的工作，但工作和生活中接处的很多东西都离不开云计算。<br>几种展现形式：<br>DaaS：高德开放平台，地理空间数据下载平台<br>SaaS：软件，app，小程序，但更多的涉及到服务提供商和软件的运营商，我们可能用到一些SaaS的产品，但并未参与到技术过程<br>PaaS（平台即服务）、IaaS（基础设施即服务）一般涉及到IT领域开发<br>概念解读：算力资源的共享与分配<br>效率与安全：5g，区块链技术（去中心化），安全保障保密<br>交叉领域：设计之外、公众参与。一些企业平台或者产品的开发可能会涉及到，但总体来讲作为设计师接触的不会太多。未来可能有新的形式？<br>云平台将在【第05章展开】<br>打比方？<br>使用者——软件用户——共同就餐人<br>业主——软件开发者——点披萨的人（组饭局的人）<br>参建方——云服务提供者——披萨店？<br>设计方案——云基础设施——披萨原材料<br>施工资源——云平台实体——加工厨具<br>运营资源——交互界面——餐桌配套<br>供应者的资源整合度越高，就越能给需求者提供更全面的服务。资源储备越大，越能提供更优质的服务。<br>这个例子只是用规划设计行业现有的业态形式来类比云服务的形式，并未提出在云计算技术支撑影响下的新业态形式。【后续是否展开？】<br><br>评估分析部分说过一部分<br>地理空间大数据<br><br>最先了解到的，狭义的大数据，地理信息时空大数据。但广义的大数据是包括时空大数据在内的，多源异构数据的获取、处理和分析的技术体系。<br>数据获取：爬取数据<br>数据处理：多源异构的问题，结构化表达，兼顾数据特征价值的发挥和可视化的需求<br>数据可视化：通过专门的软件工具，包括表格和各种图示<br>在关键词/风景园林工程|风景园林工程中，主要体现在规划设计前期的评估分析中。所以不一定以“大”为重点，也不要认为获取不到“大数据”，就用不到大数据。而是综合运用好理性定量的分析手段，对所能拿到的各类数据进行分析，形成应用范式，这样在能够获取大数据的也是。<br>总结：“数据是离散的信息，信息是有组织的数据”<br>会就规划实践中评估分析入手做展开，在【第04章展开介绍】数据治理、分析数据可视化部分<br><br>人工智能<br>计算机视觉，人脸识别，语义分割<br>计算机生成：AIGC图像、视频、模型<br>计算机模拟自然语言：ChatGPT，笔记软件，……<br>大模型？<br>但是要冷静看待，前两年VR甚嚣尘上，元宇宙概念也是，但仍未产生其预期的变化。AI虽然来势汹汹，但如何影响工程实践，还有待观察。<br>和风景园林的关系？应用潜力，【第12章展开探讨】<br><br>智能语义识别<br><br>从人的主观能动性，按照两个极端，先二元性地分为<br>
<br>辅助评估
<br>设计师录入数据、……最后总有一步是主观的<br>
<br>生成式决策与生成式设计
<br>设计师只负责录入数据和分析逻辑，结果越过人直接影响方案<br>沾了很多科研领域的事情，不展开说，理性和感性的问题不好解决<br><br>从人机的主观性上<br>
<br>生成式设计
<br>辅助设计
<br><br>智慧审查<br>智慧运维<br>智慧互动<br>……<br><br>前文有提到“范畴划分”，“作为设计师需要了解什么”这些概念，从数字孪生和云数智两节的介绍，也体现出很多作为设计师和作为IT从业者身份上的差异。<br>但所有信息化技术，都离不开计算机技术，绕不开的话题就是编程，么风景园林和编程究竟有什么关系，作为设计师需不需要学习编程？<br><br>从“参数化设计”引入<br>Stephen的数字景观两方面价值取向，“作为实现数字化风格的方法”和“以数字化途径进行实践的工具”。前面有在BIM技术的延伸部分提到参数化设计的概念，但很多人认识参数化设计还是从zaha自由曲线造型的建筑入手。所谓“参数化设计风格”的东西，很明显就是“作为实现数字化风格的方法”<br>但本报告的内容，则大部分是从“以数字化途径进行实践的工具”的角度出发。所以将参数化风格，数字化风格做一个切割。<br>但无论从哪个角度入手，都会接触到Grasshopper。<br>介绍Grasshopper，Rhino，Food4Rhino。<br>节点可视化编程<br>展开介绍Grasshopper<br>相关的，Dynamo，blueprint，unity的节点可视化，houdini，blender，GIS二开<br>回归模拟——面向对象的编程<br>介绍面向对象<br>介绍Python，C#<br>和沈存的聊天<br>编程选择将在【第12章展开介绍】？<br><br>（算法景观）<br>尺度：任何尺度、内容：算法、处理对象：数据、应用：很多领域<br>参数化设计<br>生成式设计<br>人工智能<br>大数据算法<br>可储存的思维逻辑<br>各类数据问题最本质最直接的处理手段/最直接最本质的人机交互<br>开放的编程语言接口，跨界的突破口，带来更多的可能性<br><br>面向对象<br><br>无代码编程？<br>人人都是产品经理？]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/2-数字景观：体系/2.2-集成体系.html</link><guid isPermaLink="false">第1部分 数字景观/2 数字景观：体系/2.2 集成体系.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:34:38 GMT</pubDate></item><item><title><![CDATA[2.1 第四次模拟]]></title><description><![CDATA[ 
 <br>明确信息技术发挥效力的机制<br>需要从生产力与生产关系入手<br>这里把风景园林工程设计的发展分成了四个阶段<br>以“模拟”为线索进行介绍<br><br><br><br>哲学上把未经人类改造的自然称为“第一自然”<br>把经过人类改造的自然称为“第二自然”<br>第三自然就不太有统一的概念，一般某个专业会把自己专业介入的内容说成是第三自然，<br>比如风景园林专业会把第二自然限定到只到居住、农耕等活动影响，但未经主观主动的造园活动的自然。而主观造园活动形成的公园等称为第三自然<br>建筑专业会说建筑是第三自然<br>也有夹带价值导向的，说第三自然是为了人类的欲望和利益而被改变、破坏的自然。<br>（但这些实际上都是对第二自然的延伸，是第二自然概念的实例）<br>甚至还有第四自然，其中大部分还是对第三自然的进一步延伸，<br>这里就不再讨论，只做“第一自然——原生自然”和“第二自然——人类参与过的自然”这种二元化分。<br><br>风景园林工程<br>就是通过对第一自然的模拟，创建第二自然<br>从自然到人造自然。即造园活动，人类对原生自然的模拟与改造<br>原尺度模拟<br>缩、移、模拟<br>关键在于模拟<br><br><br>注意，虽然都有第几次的用辞，但是这里说的就是模拟，不再讨论第几自然的问题了。<br>第二次模拟，主要是指人类对造园活动的模拟<br>从造园活动到图纸。即工程制图，人类对造园活动的模拟<br>把造园活动，模拟成图纸等记录形式，即形成了交付物<br><br><br>交付物的形式，取决于技术水平<br>某种形式的应用，时间长了会形成范式，会形成标准规范<br>但这反而限制了新交付形式的应用<br><br><br>（限定了交互方式）<br>第三次模拟，对应的就是计算机辅助制图技术的普及<br>即甩图板<br>但实际上，从图纸到电子图纸的转换<br>模拟的实际是“画图”这件事，<br>形成了“造园活动——第二次模拟——图纸——第三次模拟——电子图纸”的链条<br>虽然提高了画图这件事的效率<br>但也将整个设计活动限制在了第二次模拟的框架之下<br>来来回回，还是画图<br>限定到具体的交付物类型上<br>可以说，第三次模拟，只是对第二次模拟的延伸<br>第3次模拟：从图纸到电子图纸。传统计算机辅助制图，以及信息技术的早期形态，<br>但仍局限于对工程制图活动的模拟。前三次模拟，越来越局限。要兼容之前模拟的规则。<br>向下兼容，比如“BIM出图”这件事）<br><br><br><br>如果第四次模拟，继续沿着第三次模拟的路线<br>去研究，怎么用模型创建图纸，怎么用AI创建图纸，怎么用AI审图纸<br>局限于这种交付物，那么路就走窄了<br><br>电子图纸只是对制图活动的数字孪生<br>而信息化设计应该是对整个建设活动的数字孪生<br>模拟对象：全生命周期中的要素和过程<br>“模拟”的对象：风景园林工程设计相关的要素和过程<br>模拟方法：数字孪生<br>重点在工具、方法体系<br><br>框图总体框架描述：基于模拟理论的信息技术总体框架<br>总体技术路线？先有个基础，再有个拓展机制<br>（图）<br>和数字孪生的关系<br><br>这个概念是不是单独研究一下，是控制论，还是什么之类的<br><br>第四次模拟，不应该是第三次模拟的延伸，也不应该是第二次模拟的延伸，应该是和第二次模拟平行的，对第二次模拟的推翻<br>用全面的数字化方法，对造园活动进行模拟，（这里可以替换成任何专业的规划建设活动），<br>从现实到数字孪生。在数字孪生世界，重新打开局面。不应局限于传统制图手段和传统施工方法。新的技术应该全方位模拟，实现对前两次模拟的突破，以及施工建造领域的突破，如信息技术支撑的数字建造技术。<br>风景园林工程信息化设计定义（或论断？）<br>规避开BIM狭义理解不兼容不同专业的问题，不如把风景园林工程的信息化技术总结为：对“全生命周期”中设计阶段涉及的要素和过程进行模拟<br>对风景园林工程信息化设计的定义和描述<br>风景园林工程信息化设计，是第四次模拟？内涵……<br><br><br>“六步骤”是设计过程的一种归纳形式，用于构建数字技术与设计活动的映射关系。将信息技术发展的时代与六步骤相叠加，观察数字技术如何对设计活动产生影响。<br>这里对六步骤在数字景观领域的含义稍加说明：<br>使用：特指由数字技术改变使用与交互体验方式。<br>感知：通过数字技术从现状或使用者获取基础信息。<br>分析：数字化途径对基础数据进行分析、辅助决策。<br>设计：计算机参与设计决策的部分或全部工作。<br>交流：借助数字化方法进行方案表达、汇报交流。<br>建造：与信息化工作流相连通的数字化建造方式。<br>可以看出，最先受到数字技术影响的环节为感知、分析与交流，这与数字技术刚出现时的第一手应用形式密切相关。随着技术向更加内在（算法影响设计）和外在（数字化元件参与的建造与交互使用）发展，其他环节才开始进入数字时代。其中设计环节受到的影响较为滞后，因为设计师在设计活动中发挥的作用很难被替代，而计算机生成的设计结果或风格则一直饱受争议。<br>高效感知：新型基础测绘<br>系统设计：参数化设计，BIM，……<br>定量分析（循证）：由循证来实现规划到设计的传导，来实现理论到实践的传导？<br>多元协同：设计之外<br>智能拓展：云数智、数字孪生、编程<br>（4+1）<br>这个维度怎么和四次模拟的维度整合？<br>整体路线图如何优化？一张图还是两张图？或者并非是一个二维图？<br>多维度图还是多圈层图？<br><br><br>把一组等高线交付给施工队，这是一次交付<br>这次交付的有效性，涉及到多次交互<br>1 设计师创建等高线（创建信息）<br>2 施工队处理等高线（获取信息）<br>3 根据获取的信息去施工（施工范畴，工程技术范畴）<br>交互交付以低成本原型开发的形式，储存这里的逻辑，给未来信息化发展兜底<br><br><a data-tooltip-position="top" aria-label="notion://www.notion.so/beff6e70cd2749e9926f6b3f512fa6ad#_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/beff6e70cd2749e9926f6b3f512fa6ad#_面向对象" target="_blank">面向对象</a><br>这种形式，可以看作一种新的交付物形式，比传统的交付物的投入肯定更大<br>所以需要更系统的创建过程，和后续的应用流程<br>在传统环境下，单项技术肯定比不上常规方法<br>需要工业化的体系<br>（与对象相对应的——离散）我们的思维和数据都是离散的。新的技术体系需要更理性科学地构建设计思维和工具之间的关系。<br><br>因为这种模拟的工作量会变大<br>如果不发挥足够多的作用，在小场景下是比不过传统工作方法的<br>所以一定要有工业化的体系作为支撑<br>很多行业都是先工业化再数字化<br>而园林行业因为规模和特征影响，没有工业化的过程，直接开始了信息技术的单项应用<br>在信息化之前先推进工业化（工作流程优化，类比电影工业）<br>工业化，信息化<br>
<br>交付（Delivery）升级
<br>靠工作流（生产组织关系）来于机制衔接，并具体体现为交互和交付两方面问题<br>交付考虑整个工作流的信息效率<br><br>
<br>交互（Interaction）升级
<br>交互考虑单次活动的信息效率]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/2-数字景观：体系/2.1-第四次模拟.html</link><guid isPermaLink="false">第1部分 数字景观/2 数字景观：体系/2.1 第四次模拟.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:33:59 GMT</pubDate></item><item><title><![CDATA[8.1 信息模型系统原型]]></title><description><![CDATA[ 
 <br><br><br>五大要素<br>一种可行的体系（LIM标准系统原型简介）<br><br>最理想的情况，一个能在环节内拿得准方案的人，在一款二三维、矢量、渲染、施工图都囊括的软件里做设计<br>最不理想的情况，拿方案的人不干活，干活的人，各项软件的功能也都是离散的<br>软件的问题<br>工作流的问题<br>合作模式的问题<br><br><br>前两年的老图<br>技术体系，五大系统<br><br>模型出图与向下兼容问题的思辨<br>允许过渡方案<br><br>轻量模型，平面布局模型<br>平面线稿，GIS面要素，LOD100<br>量化模型<br>工程量，造价，碳足迹<br>三维模型，系统整合模型<br>平面线稿，GIS面要素，LOD100<br><br>不要建模就是建模<br>出图就是出图<br>先出一个方案模型，回头重新画施工图<br>图模之间没有关联，模型建的也不准，也无法发挥模型的价值<br><br>不要只想着按照传统的工作划分，每个阶段解决每个阶段的问题<br><br><br><br>GRADING<br><br>点线面的回归问题<br><br>竖向设计≠画等高线<br>画等高线这件事极大程度地限制了做竖向设计的方法和思维<br>只会进行等高线到三维沙盒的单向重复（逆向）<br>竖向设计是最适合做正向设计的环节了<br><br>（1）创建现状地形<br>（2）以现状地形为参考，设计主要的道路场地标高<br>（3）处理放坡、衔接、挡墙问题<br>（4）微地形设计<br>（5）设计地形的整合匹配<br><br>根据项目情况不同，原状地形的保留程度、硬质铺装占比等等，有变化调整<br>但总体符合上述情况<br><br><br><br>（道路场地细部和建构筑物）<br>装配，概念设计和施工设计的二元划分<br><br>之前就是概念建模和施工建模划分不明确<br>SU中只建立一个形状，但是无法形成一个对应语义的工程要素单元<br>Revit中概念体量和族的关系<br>应用<br>断面<br>零件<br>复杂<br><br>传统施工图思维，轴线的价值，详图的价值<br><br>有限元处理<br><br>幕墙，表皮<br><br>以前没接触过落地项目和施工图，很多软件的应用只停留在纸上谈兵阶段。这几个月终于有幸在@许师傅的指导下参与了几套。许师傅建议我试试用Gh快速设计木铺装，并传授了地板和龙骨的传统画法。几套图后，我发现地板和龙骨的设计，类似于“鸡生蛋，蛋生鸡”的问题，在规整尺寸、优化方案的过程中需要反复推敲、互相参照，说不上完全由谁决定谁。如果龙骨下面不是混凝土垫层，而是梁柱结构，这个问题可能就会变得更复杂。<br>后来想了想，地板、龙骨、结构之间的关系处理不好，归根结底还是因为概念方案阶段想得不够细致。在画施工图前，应该先想好木地板铺设样式，再和结构专业对好结构形式，最后用龙骨去协调上层木板和下层结构之间的关系，因为龙骨大部分情况下是不会外露的，所以设计上较为灵活。<br>本文将主要介绍如何用参数化设计进行木地板的铺设，因为木地板的绘制是三者中最为繁琐的，运用参数化的收益比较高。结构与基础往往需要结构专业配合，图形的绘制量较少。而龙骨情况比较特殊，规律的部分很简单，用不用参数化都很好画，有变化的部分往往需要针对具体情况进行调整，一两个电池组也不具有普适性，所以这里暂不讨论。<br>当然施工队有时候会不按图干，按照自己习惯的方法去铺，有些甲方觉得糖葫芦不够大不够红的时候，也会提出由施工队\厂家细化这种天真的要求。但作为设计师，了解木地板的铺设方法，一来是能够更控制方案、保证效果，至少在施工队没按图施工时能看得出来；二来是通过精细化设计减少板材切割，实现节俭设计（最近节俭是主旋律，有些工程还需签署“不过度设计承诺书”）；三是图画得精致，能满足强迫症心理。不多说了，上案例——<br>案例一：方方正正<br>从基础的做起：方方正正的场地如何铺一键铺地板。在CAD画铺装时，经常会出现铺到一半回去调整尺寸的情况，所以本例的切入点，是根据材料模数，以尽量减少板材切割为原则对场地尺寸进行规整优化，再自动生成设计结果。电池组分为三部分：修正场地外缘尺寸、修正场地中洞口尺寸、铺设木地板。涉及核心问题两点：一是以哪里为基准进行尺寸修正（可理解为铺装从哪里开始铺），二是如何修正尺寸。<br>问题一：从哪里开始铺<br>经过几次失败后（比如从场地中、边线或者角点选点。不是不可行，而是需要考虑的特殊情况太多），得到一种相对简易的方法：<br>1）将场地边缘分为水平和垂直两组；<br>2）以垂直边缘为例，按左边缘、右边缘再分为两组（水平组为上边缘、下边缘）；<br>3）以最左侧边缘为基准修正各右侧边缘的位置（水平组同理）；<br>4）以修正后的最右侧边缘返回来修正除最左侧外的各左侧边缘（水平组同理）；保证场地的每一个边缘都被正确修正。<br>问题二：尺寸修正算法<br>即问题3~4步骤的具体实现，这个过程的难点主要在于将板材的留缝、板材切割模数（比如1200规格的板材按照300切成四块，每块都能用，就不产生浪费），以及修正尺寸时是否增加板材考虑在内。具体算法如下：<br>1）将板材尺寸和板材缝宽相加（垂直边缘时用板材x轴长度加x轴缝宽，水平为y）；<br>2）用未修正边缘距离除以板缝合得到余数；<br>3）如果补板的话，加一块整板的长度（尺寸会增加）<br>4）不补板的话，用余数除以切割模数（图中叫容差），得到余数，减去余数就是修正后的边缘位置（尺寸会减小）；<br>5）如果余数小于切割模数，则减去余数和一个缝宽（保证“板~缝……缝~板”节奏）；<br>掏洞口的原理相同，这样修正过后的场地尺寸，只要保证错缝也按模数来，就能实现主体部分用整块板材铺设，切割板材也很少产生浪费。这组电池同样应用于各类矩形铺装的设计，对于非规则形态的场地，也可以先生成“骨格框架”，以次基础绘制铺装分割线。<br>案例二：曲曲折折<br>本例主要讨论线性工程（如木栈道）的铺装铺设。对于折线形态的栈道，在直线段部分可以垂直轴线顺铺，在转角处做好对缝，或直接用一块钢格栅作为交接以减少板材切割（避免对缝做粗糙了影响效果）。<br>对于曲线形态的栈道，有两种情况：一是曲线的曲率不大，可以靠“掰缝”来实现整板铺设，转折交接处用对缝或钢格栅处理。二是曲线曲率过大，可以设计好分缝、对缝，不同区域按照不同方向顺铺。<br>前些日子参与了一组曲线栈道的设计，由于四根钢梁能够满足板材铺设，所以取消了龙骨。标准段部分的电池其实很好写，之所以写了这么多电池是因为将不同段的结构与基础做法、钢结构伸缩缝，以及不同做法段的交接考虑在内。<br>图纸基本实现了设计意图，但由于施工队赶工，钢结构就做成了折线，导致木板在直线段还是顺铺，转角处无法用三五块板去掰出设计图中十几块板所消纳的角度，所以只能靠切板来解决，最终效果非常一般。<br>同样是案例二中的项目，方案设计了一处曲线形态的场地。最初的方案是顺铺，在边缘处切板（这种形状的场地没法不切）。但后来应业主要求，要改成人字形（或鱼骨形）对缝，而且对的缝还是弧线。劝说未果之后，业主直接要求由厂家深化设计，但是厂家听了之后说不会铺。所以我还是研究了一下把这张“弧形鱼骨对缝”地板铺设图画了出来，厂家看了之后仍然表示铺不出来（掰缝很费功夫，而且弧线对缝必须切板），最后的最后还是采取直线对缝，但是用席纹铺设减少板材切割。<br>这里把弧形鱼骨对缝的做法分享出来，当然不建议大家用这种做法，并没有很好看，而且的确浪费板材。实现过程如下：<br>1）将弧形对缝轴线向两侧偏移；<br>2）将轴线定距等分，在偏移线上找对应垂点，shift轴线等分点列表；<br>3）根据直角三角形一直角边长度（板缝合，输入参数），长边的高（偏移距离，输入参数）求出另一个短边的长度，得到定距等分的距离；<br>4）将轴线等分点与两侧等分点相连并延长，得到板边缘线；<br>这一逻辑在直线对缝和曲线对缝中都适用，但在曲线对缝中，我们求出的三角形长边其实是弦长，其对应的弧长才是实际的定距等分距离。所以后来还加了一部根据弦长和半径求弧长，对结果进行进一步修正，不过修正出来的结果也并没有很理想，实际的缝宽还是会在3~7mm之间波动。当然，这一设计精度足以指导施工，是要他们肯切板，肯认真掰缝，肯定是能铺出来的。<br>以上就是笔者对Gh辅助木地板铺设图纸（二维）绘制的一些尝试与思考。二维图纸在传达效率方面，有时甚至是优于三维模型的。模型需要用等量的图形数据去传达等量设计信息，而图纸在绘图者和读图者经验的支撑下，可以通过较少的图形去传递完整的设计信息，标注以及图纸之间的引用也大大提高了信息的利用效率。<br>Gh也不一定非要解决三维图形的问题，用Gh去画二维施工图也很有用。图形维度不是绝对的限制，信息的准确传达才是核心价值。在信息模型技术的广泛应用尚未成熟定论之时，灵活运用数字技术有针对性地解决问题（而不是一味追求全盘一锅端），才是脱离了高校这一温床之后，在工作一线的生存之道。<br><br>引出种植设计和设施布置<br><br><br><br>（认识数字资产）<br>从装配和建模思维，引出种植设计和设施布置的共性问题<br><br>回顾竖向设计中点线面的回归，以及装配中点和plane的概念<br>种植设计和设施布置的流程抽象<br><br>教程中代理物件部分提炼<br><br>教程提炼<br><br>教程提炼<br><br><br><br>受限于交付物的交互方式<br><br><br>第二次模拟限定了交付物<br>所以第三次模拟，虽然使用了数字化的工具，但还是在与图纸这种限定形式的交付物在交互<br>一切动作都服务于创建图纸，阅读图纸，把不是图纸的东西变成图纸<br>有好处<br>也有很大的局限<br><br>第六章主要说了为什么对象化的模型是更好的交付物，主要关注不同环节之间<br>本章聚焦到设计师与交付物之间的单次交互，包括创建，修改，阅读<br>主要从交互的角度，来说明，为什么与对象化模型的交付是更优的方式<br>创建信息的效率<br>阅读，获取信息的效率<br><br>与环境交互，与数据交互，与更先进的交付物去交互<br>而不只是画图<br>（引出7.2）<br><br><br>
<br>感知：与环境交互
<br>勘察，测绘地理信息，具体技术不做展开<br>直接获取信息与间接获取信息<br>主要一点，就是与测绘模型的交互要强于看测绘图<br>
<br>循证：与数据交互
<br>对于评估分析的成果，图纸都拍平的，扁平化的，归一化的表达<br>会有很多主观的修饰，传达信息的误导<br>所以这里简单讨论一下数据影响人的方式（分析结论如何影响决策）<br>
<br>设计之外：互动体验？
<br>1） 审查？<br>2） 运维？<br>3） 服务、互动、体验<br><br>主要谈画图和建模的区别<br>不同工作流创建相同信息，操作的数量<br>不同交互逻辑的效率<br>非线性的交互逻辑<br>LA专业内容的探讨 和建筑的异同<br>Grading<br>Assembling<br>建构筑物<br>植物<br>但是BIM技术涉及到很多环境层面的问题，超出讨论范畴。我们只讨论信息模型中模型的部分，讨论高效建立模型的方法，聚焦到规律型装配这一点。主要讨论装配思维在【设计阶段】工程制图或工程建模中的使用，会涉及很多软件的操作，更直接地指导实际工作。<br>建模的过程，就是在数字环境中模拟工程建设的内容。传统三维制图软件的工作环境较为自由，这对于开放自由的方案设计是有利的。但并不一定能满足更为严谨的工程设计，所以在进行工程设计建模时，一定要从整体和局部的关系出发，应用装配思维，以尽量还原现实中工程对象组合方式的思维来进行模型的建立。<br>交互媒介<br>交互逻辑<br>交互的范式——装配<br><br><br>推拉<br>布尔运算<br>几何特性检测<br>干扰<br>……<br><br><br>正向设计的本质是直接和间接？<br>正向设计的本质是二维和三维？<br>工作流上正向和逆向<br><br>1） 以展开立面为例<br>2） 引出原位和装配？<br>原位（In situ）建模——可见性管理<br>装配式（Assemble）建模<br><br><br>对建造过程的模拟<br>辅助理解定义<br>
<br>传统施工图、常规建模
<br>在施工图设计中，对于具有线性特征的工程对象，采用“轴线控制位置，断面图表达做法”的方式，就是最为典型的装配思维的体现。不同图纸之间的索引，不在统一图纸（视图）下展现全部信息，也是装配思维的体现。这种思维可以帮助我们在尺度和维度（二维）比较适应的视图中进行细部设计，从结果上也是用较少的信息传达了完整的工程建造做法。在二维中做设计的过程中，“装配”就是二维图纸做交付所必须的一种思维或者内在原理。<br>SketchUp建模中，路径跟随功能体现出线性装配的特征，组件和群组也是装配思维的一种体现，但不一定总反映出线性装配规律。但SU建模很难达到直接导出施工设计成果的深度，模型层及过多时会出现管理混乱的情况。三维中的推敲和二维制图的过程往往是分别进行的，这种分离降低了工作效率，阻碍了对BIM思维的理解，也让设计师很难直观地体验到装配的过程。<br>
<br>BIM软件中的体现
<br>二维图纸只需要传达完整的信息即可，但三维建模需要利用这些视图生成完整的模型单元。BIM建模需要二维和三维的统一，我们需要在特定视图下进行二维设计，也需要在三维视图中推敲，还需要高效、精确、理性、定量……<br>Autodesk Civil3D线性工程建模（道路、管线、场地收边，总之只要是能找出轴线的……）中，这一操作本身就叫“装配”，这也体现出了BIM软件建模的模型单元是和工程要素对象意义对应的。<br>Revit情况比较复杂，不同的族对应着不同的装配形式。Dynamo也可以实现族的批量放置、批量参数定义等。在不同层次之间有不同形式的装配控制方法。<br>都符合二维中做设计、三维做推敲展示、可定量这一特征。所以传统工程制图向BIM的过渡，从方法上需要掌握更高效的建模方法——参数化建模，思维上则需加强对于“装配”的理解。<br>装配的定义，交互的环节？<br>装配（英文翻译为assembling）释义为把零件或部件配成整体。本文中主要是指通过数字化“模型单元”来模拟“工程对象”的形态生成、组合安装的过程及思维。这里的工程对象就是指工程建设中的各类零部件，模型单元则是工程对象在数字空间中的“孪生对应”，下文对这一概念统称为“单元”。<br>做造型和做装配——实际上就是做方案和做施工图？<br>逻辑的选择<br>做造型：参数式、生成式……<br>做装配：详图的逻辑<br>两个环节对上述逻辑的选择和对应关系<br><br>两个层级之间的装配，涉及到三个要素——整体，局部，以及局部在整体中的位置。其中第三者是装配过程的关键，从整体出发时轴线或阵列，从局部出发则是工作平面与基本单元，这两组概念共同反映了局部与整体的位置及关系。<br>1） 轴线或阵列<br>
<br>轴线，反应工程对象的位置，按视图可以拆解为平面图和纵断面图。后续主要应用于放样（形态生成），或者线性阵列。
<br>典型例子——道路<br>
<br>线性阵列（曲线上细分），也是从轴线出发，不过是从周线上选点（工作平面）放置装配。
<br>典型例子——灯具<br>
<br>二维阵列（曲面细分，uv）可以理解为横纵两组轴线。
<br>典型例子——铺装、表皮<br>
<br>三维阵列（实体细分），较少涉及，后续补充。
<br>典型例子——垒砌，但这种一般都是到施工深化设计才用得到，作为设计师一般很少用到。<br>2） 工作平面<br>Orient<br>工作平面，plane，以装配单元原点（可理解为组件或块的原点）为原点的xy坐标系。其实还有z轴，反映了朝向，比如线性阵列中常见的horizontal（z轴朝法线）和perpendicular（z轴朝切线）两种情况。<br>工作平面，一维线性阵列，二维阵列，三维空间阵列，体现出了点、线、面、体四个层次，可以互相拆解和转换。<br>工作平面决定了装配零件所处的位置，朝向。<br>3） 基本单元<br>实体或截面<br>4） 整合形式<br>从建模方法上理解，就是放样（连续的）或者阵列（不连续的）<br>
<br>单体
<br>放样
<br>当然规律型阵列不能满足工程建模实际中的所有情况，例外的地方用算法或统一规律不好解决，需要单独补上去。（比如REVIT的内建族用法，或者SU的“组件设为唯一”）<br>5） 规律装配<br>一组单元从局部到整体会分为多个层次，在只考虑两个层级之间的情况时，从【总体特征上？】可将装配分为规律型和非规律型两种，本文主要讨论规律型装配。<br>非规律装配以及多个层级的嵌套问题，需结合具体情况处理，但大体上以规律型装配思维为基础。<br>规律型装配可分为，线性装配（轮廓放样、路径跟随），一维阵列装配（曲线细分），二维阵列装配（曲面细分），三维阵列（实体细分）等类型，后文会对这一组概念进行展开介绍。<br>用有限数量的参数可以控制<br>线性装配<br>一维阵列——曲线细分<br>二维阵列——曲面细分<br>三维阵列——实体细分<br>6） 非规律<br>数值规律难以统计，无法用参数的形式来控制<br>多层级组织问题<br><br>1） 断面装配（放样的应用）<br>最典型的就是道路设计，线性特征图土方工程（大坝）<br>
<br>大坝为例
<br>通过设计典型断面，将典型断面布置到周线上，生成模型，将模型和现状组合后，再反馈出模型和断面，进行深化调整。<br>
<br>道路建模：Civil3D的架空平替为例
<br>轴线，纵断面的设计，横断面装配。路面放样装配，路缘石的阵列装配？<br>2） 零件装配（阵列）<br>木地板，钢结构，种植设计，灯具布置<br>
<br>木地板装配：坝河为例
<br>以木地板为基本单元，做阵列装配，进行碰撞检测，确定切割方式。<br>3） 复杂参数化装配<br>高级用法，gh参数化造型，revit族嵌套，<br>预制、装配式<br>交付？信息挂载<br>
<br>钢结构装配：天空之环为例
<br>异形肋板的装配，深化过程可能需要参数化<br><br><br>地形不能算装配，应该算一个大型单体<br>只有细部<br>道路场地可以装配<br>建构筑物可以装配<br>植物和设施布置都同理<br><br><br>预制装配技术的对接与推广？<br>其他新型数字化建造技术对接？<br><br>理想的风景园林建模软件？<br>理想架构？]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/3-数字景观：理论/3.1-交互与交付.html</link><guid isPermaLink="false">第1部分 数字景观/3 数字景观：理论/3.1 交互与交付.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:35:29 GMT</pubDate></item><item><title><![CDATA[数字景观：关键概念与线索]]></title><description><![CDATA[ 
 <br><br>风景园林工程包括：风景资源的评价、保护和风景区；城市园林绿地系统、园林绿地、城市景观环 境；园林植物、园林建筑、风景园林道路工程、园林种植；与上述风景园林工程配套的景观照明。<br>——住建部《工程设计资质标准》<br><br>传统的“全生命周期”指工程建设项目从建设决策到交付使用的周期。在存量发展的背景下，可以采取更广义的理解，将“从城市体检、城市更新行动等规划视角的工作开始，经历建设、竣工、交付使用，直到下一次体检评估“的全过程作为一个城乡区域系统的全生命周期。<br><br><a data-tooltip-position="top" aria-label="notion://www.notion.so/5f07911c311d481ca476a848f183545e#_%E5%B7%A5%E4%BD%9C%E6%B5%81" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/5f07911c311d481ca476a848f183545e#_工作流" target="_blank">工作流</a>（第六章）<br><br><br>关键线索<br><br><a data-tooltip-position="top" aria-label="notion://www.notion.so/b49faed716944dfd90f72339efeb0001#_%E4%B8%8D%E5%90%8C%E5%B1%82%E6%AC%A1%E7%9A%84%E9%9C%80%E6%B1%82%E5%92%8C%E5%9B%B0%E5%A2%83" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/b49faed716944dfd90f72339efeb0001#_不同层次的需求和困境" target="_blank">不同层次的需求和困境</a><br><br><a data-tooltip-position="top" aria-label="notion://www.notion.so/%E6%87%92%E6%83%B0#_" rel="noopener nofollow" class="external-link" href="https://2ez4zc.github.io/2Ez4zC/notion://www.notion.so/懒惰#_" target="_blank">“懒惰”的力量</a><br><br>环境感知——评估分析——系统设计——多元协同——数智赋能<br>（实际上是4+1？数智赋能并非按照生命周期出现的环节）<br>出现在：<br>集成应用体系<br>交付物的决定依据？<br>交互的范畴<br>实务篇总体框架<br>要不要拉个大表格，看一下五个环节在不同章节展开子项的对应关系？<br><br><br>辅助设计，生成设计<br><br>逻辑储备的意义<br>语义库的意义]]></description><link>https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/数字景观：关键概念与线索.html</link><guid isPermaLink="false">第1部分 数字景观/数字景观：关键概念与线索.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 09:36:27 GMT</pubDate></item><item><title><![CDATA[Matrix Flip]]></title><description><![CDATA[ 
 <br>
<br>机理——应用——工具

<br>对应、包含的具体内容<br>



<br>知识——智慧——素材

<br>DIKW的层次<br>



<br>系统——程序——实例

<br>抽象的体现形式


]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/0-cgi总论/matrix-flip.html</link><guid isPermaLink="false">第4部分 CGI学习/0 CGI总论/Matrix Flip.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:19:42 GMT</pubDate></item><item><title><![CDATA[0 CGI总论]]></title><description><![CDATA[ 
 <br>
<br>知识——原理——系统  学校课本
<br>智慧——应用——流程  社会实践
<br>资源——工具——实例  自学教程
]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/0-cgi总论/0-cgi总论.html</link><guid isPermaLink="false">第4部分 CGI学习/0 CGI总论/0 CGI总论.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:20:48 GMT</pubDate></item><item><title><![CDATA[计算机图形学]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/计算机图形学.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/计算机图形学.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:21:17 GMT</pubDate></item><item><title><![CDATA[1.5 特效原理]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/1.5-特效原理.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/1.5 特效原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:21:06 GMT</pubDate></item><item><title><![CDATA[1.4 计算机动画原理]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/1.4-计算机动画原理.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/1.4 计算机动画原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:20:55 GMT</pubDate></item><item><title><![CDATA[1.3 光照原理]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/1.3-光照原理.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/1.3 光照原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:20:10 GMT</pubDate></item><item><title><![CDATA[1.2 材质原理]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/1.2-材质原理.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/1.2 材质原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:19:54 GMT</pubDate></item><item><title><![CDATA[1.1 建模原理]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/1-知识——原理——系统/1.1-建模原理.html</link><guid isPermaLink="false">第4部分 CGI学习/1 知识——原理——系统/1.1 建模原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:18:01 GMT</pubDate></item><item><title><![CDATA[2.1 流程原理]]></title><description><![CDATA[ 
 <br>Procedure]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/2-智慧——应用——流程/2.1-流程原理.html</link><guid isPermaLink="false">第4部分 CGI学习/2 智慧——应用——流程/2.1 流程原理.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:23:08 GMT</pubDate></item><item><title><![CDATA[Houdini]]></title><description><![CDATA[ 
 ]]></description><link>https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/3-资源——工具——实例/houdini.html</link><guid isPermaLink="false">第4部分 CGI学习/3 资源——工具——实例/Houdini.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:23:37 GMT</pubDate></item><item><title><![CDATA[00 序]]></title><description><![CDATA[ 
 <br><br><a data-href="1 序言" href="https://2ez4zc.github.io/2Ez4zC/0-序/1-序言.html" class="internal-link" target="_self" rel="noopener nofollow">1 序言</a><br>
<a data-href="2 指南" href="https://2ez4zc.github.io/2Ez4zC/0-序/2-指南.html" class="internal-link" target="_self" rel="noopener nofollow">2 指南</a><br><br><a data-href="0.1 数字景观序言" href="https://2ez4zc.github.io/2Ez4zC/第1部分-数字景观/0-数字景观：序言与导读/0.1-数字景观序言.html" class="internal-link" target="_self" rel="noopener nofollow">0.1 数字景观序言</a><br><br><a data-href="0 CGI总论" href="https://2ez4zc.github.io/2Ez4zC/第4部分-cgi学习/0-cgi总论/0-cgi总论.html" class="internal-link" target="_self" rel="noopener nofollow">0 CGI总论</a>]]></description><link>https://2ez4zc.github.io/2Ez4zC/index.html</link><guid isPermaLink="false">Index.md</guid><dc:creator><![CDATA[2Ez4zC]]></dc:creator><pubDate>Thu, 16 Oct 2025 10:17:19 GMT</pubDate></item></channel></rss>